<dbg>
    ListItem((Pi n #symVariable(1) Set 0))
    ListItem((Pi k Nat (Pi x #symVariable(31) (Pi xs Vect #symVariable(31) k 
      Vect #symVariable(31) Succ k))))
    ListItem((Pi x #symExpr(29) (Pi xs Vect #symExpr(29) #symVariable(34) Vect
       #symExpr(29) Succ #symVariable(34))))
    ListItem((Pi n #symVariable(37) Wrap #symVariable(37) n))
    ListItem( Wrap Top #symVariable(40) )
    ListItem( Vect #symVariable(48) Zero )
</dbg>
<T>
    <k>
        .K
    </k>
    <mgu>
        subst(.KList)
    </mgu>
    <data>
        Nat |-> Set 0
        Succ |-> (Pi x Nat Nat)
        T |-> Top
        Top |-> Set 0
        Vcons |-> (Pi a Set 0 (Pi k Nat (Pi x a (Pi xs Vect a k Vect a Succ k)
          )))
        Vect |-> (Pi a Set 0 (Pi x Nat Set 0))
        Vnil |-> (Pi a Set 0 Vect a Zero)
        W |-> (Pi a Set 0 (Pi n a Wrap a n))
        Wrap |-> (Pi a Set 0 (Pi n a Set 0))
        Zero |-> Nat
    </data>
    <meta>
        #symExpr(29) |-> ( Wrap Top T , Set 0 )
        #symExpr(46) |-> ( Wrap Top T , Set 0 )
    </meta>
    <fun>
        expr |->  Vcons #symExpr(29) Zero W Top T Vnil #symExpr(46) 
    </fun>
    <tenv>
        expr |->  Vect Wrap Top T Succ Zero 
    </tenv>
</T>
