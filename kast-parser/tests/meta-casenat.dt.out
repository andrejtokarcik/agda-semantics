<T>
    <k>
        whnf ( p ) ~> whnf (  HOLE n  ) ~> HOLE constructorOf Nat ~> true?
           ~> processConstrs ( Nat ,  ) ~> expr =  CaseNat (?) Zero (Lambda x 
          Nat x) 
    </k>
    <mgu>
        subst(.KList)
    </mgu>
    <tenv>
        .Map
    </tenv>
    <data>
        CaseNat |-> 'Pi___(p,, (Pi x Nat Set 0),, (Pi y p Zero (Pi z (Pi n
           Nat p Succ n) (Pi n Nat p n))))
        Nat |-> Set 0
        Succ |-> 'Pi___(x,, Nat,, Nat)
        Zero |-> Nat
    </data>
    <fun>
        .Map
    </fun>
    <meta>
        .Map
    </meta>
</T>
