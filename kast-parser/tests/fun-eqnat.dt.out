<dbg>
    .List
</dbg>
<T>
    <k>
        .K
    </k>
    <mgu>
        subst(.KList)
    </mgu>
    <data>
        Bool |-> Set 0
        False |-> Bool
        Nat |-> Set 0
        Succ |-> (Pi x Nat Nat)
        True |-> Bool
        Zero |-> Nat
    </data>
    <meta>
        .Map
    </meta>
    <fun>
        eqNat |-> ((fun ( ListItem(Zero -> Zero -> True) ListItem(Zero -> 
          (Succ y) -> False) ListItem((Succ x) -> Zero -> False) ListItem((
          Succ x) -> (Succ y) ->  eqNat x y ) )) @ .Map)
    </fun>
    <tenv>
        eqNat |-> (Pi #symVariable(42) Nat (Pi #symVariable(45) Nat Bool))
          
    </tenv>
</T>
