<dbg>
    ListItem((Pi y s x s x))
</dbg>
<T>
    <k>
        evalNf ( (fun ( ListItem(True -> Bool) ListItem(False -> T) )) )
           ~> evalNf (  HOLE x  ) ~> evalNf ( (Pi y HOLE s x) ) ~> ( (Lambda y
           s x y) , HOLE ) ~> fenv ( s |-> ((fun ( ListItem(True -> Bool) 
          ListItem(False -> T) )) @ .Map) x |-> (^) ) ~> (Lambda x ( Bool , 
          Set 0 ) HOLE) ~> tenv ( f2 |-> #symExpr(8) s |-> (Pi #symVariable(5)
           Bool Set 0) ) ~> fenv ( s |-> ((fun ( ListItem(True -> Bool) 
          ListItem(False -> T) )) @ .Map) ) ~> evalWhnf2 ( HOLE ) ~> ( f2 , 
          #symExpr(8) ) = HOLE ~> funDecl ( f2 , s |-> (Pi #symVariable(5) 
          Bool Set 0) ) ~> h =  f2 False E  ~> g =  f2 True E 
    </k>
    <mgu>
        subst(.KList)
    </mgu>
    <data>
        Bool |-> Set 0
        E |-> T
        False |-> Bool
        T |-> Set 0
        True |-> Bool
    </data>
    <meta>
        .Map
    </meta>
    <fun>
        s |-> ((fun ( ListItem(True -> Bool) ListItem(False -> T) )) @ 
          .Map)
        x |-> (^)
        y |-> (^)
    </fun>
    <tenv>
        f2 |-> #symExpr(8)
        s |-> (Pi #symVariable(9) Bool Set 0)
        x |-> Bool
    </tenv>
</T>
