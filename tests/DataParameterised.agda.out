<k>
    .K
</k>
<mgu>
    subst(.KList)
</mgu>
<ctx-stack>
    .List
</ctx-stack>
<sig>
    Fun ( "null" ) |-> { #symVariable(28) : Set ( 0 ) } -> ( #symVariable(27) 
      : (Data ( "List" ) #symVariable(28)) ) -> Data ( "Bool" )
    Data ( "Bool" ) |-> Set ( 0 )
    Data ( "List" ) |-> ( #symVariable(6) : Set ( 0 ) ) -> Set ( 0 )
    Data ( "Nat" ) |-> Set ( 0 )
    Con ( "cons" ) |-> { #symVariable(22) : Set ( 0 ) } -> ( #symVariable(20) 
      : #symVariable(22) ) -> ( #symVariable(21) : (Data ( "List" ) 
      #symVariable(22)) ) -> (Data ( "List" ) #symVariable(22))
    Con ( "false" ) |-> Data ( "Bool" )
    Con ( "nil" ) |-> { #symVariable(11) : Set ( 0 ) } -> (Data ( "List" ) 
      #symVariable(11))
    Con ( "suc" ) |-> ( #symVariable(5) : Data ( "Nat" ) ) -> Data ( "Nat" )
    Con ( "true" ) |-> Data ( "Bool" )
    Con ( "zero" ) |-> Data ( "Nat" )
</sig>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<ncat>
    Name ( "Bool" ) |-> Data ( "Bool" )
    Name ( "List" ) |-> Data ( "List" )
    Name ( "Nat" ) |-> Data ( "Nat" )
    Name ( "cons" ) |-> Con ( "cons" )
    Name ( "false" ) |-> Con ( "false" )
    Name ( "nil" ) |-> Con ( "nil" )
    Name ( "null" ) |-> Fun ( "null" )
    Name ( "suc" ) |-> Con ( "suc" )
    Name ( "true" ) |-> Con ( "true" )
    Name ( "zero" ) |-> Con ( "zero" )
</ncat>
<fun>
    Fun ( "null" ) |-> 'fc(((#symFunClauses(56) { DotP ( #symExpr(46) ) }) (
      Con ( "nil" ) { #symExpr(46) })) = Con ( "true" ),, ((#symFunClauses(104
      ) { DotP ( #symExpr(63) ) }) (((Con ( "cons" ) { #symExpr(63) }) 
      #symExpr(62)) #symExpr(75))) = Con ( "false" ))
</fun>
