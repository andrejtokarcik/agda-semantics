<k>
    .K
</k>
<mgu>
    subst(.KList)
</mgu>
<ctx-stack>
    .List
</ctx-stack>
<sig>
    Fun ( "map" ) |-> { #symVariable(77) : Set ( 0 ) } -> { #symVariable(
      76) : Set ( 0 ) } -> ( #symVariable(73) : ( #symVariable(75) : 
      #symVariable(77) ) -> #symVariable(76) ) -> ( #symVariable(74) : (Data (
       "List" ) #symVariable(77)) ) -> (Data ( "List" ) #symVariable(76))
    Fun ( "nil2" ) |-> (\ ( #symVariable(34) : Set ( 1 ) ) -> #symVariable(34)
       { #symVariable(35) : Set ( 0 ) } -> (Data ( "List" ) #symVariable(35)))
    Fun ( "tt" ) |-> ( #symVariable(54) : Set ( 1 ) ) -> Set ( 2 )
    Data ( "List" ) |-> ( #symVariable(7) : Set ( 0 ) ) -> Set ( 0 )
    Con ( "_::_" ) |-> { #symVariable(23) : Set ( 0 ) } -> ( #symVariable(21) 
      : #symVariable(23) ) -> ( #symVariable(22) : (Data ( "List" ) 
      #symVariable(23)) ) -> (Data ( "List" ) #symVariable(23))
    Con ( "nil" ) |-> { #symVariable(12) : Set ( 0 ) } -> (Data ( "List" ) 
      #symVariable(12))
</sig>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<ncat>
    Name ( "List" ) |-> Data ( "List" )
    Name ( "_::_" ) |-> Con ( "_::_" )
    Name ( "map" ) |-> Fun ( "map" )
    Name ( "nil" ) |-> Con ( "nil" )
    Name ( "nil2" ) |-> Fun ( "nil2" )
    Name ( "tt" ) |-> Fun ( "tt" )
</ncat>
<fun>
    Fun ( "map" ) |-> 'fc(((((#symFunClauses(147) { DotP ( #symExpr(127) )
       }) { #symVariable(143) }) Var ( "f" )) (Con ( "nil" ) { #symExpr(127) }
      )) = (Con ( "nil" ) { #symVariable(143) }),, ((((#symFunClauses(269) { 
      DotP ( #symExpr(149) ) }) { #symVariable(265) }) Var ( "f" )) (((Con ( 
      "_::_" ) { #symExpr(149) }) Var ( "x" )) Var ( "xs" ))) = (((Con ( 
      "_::_" ) { #symVariable(265) }) (Var ( "f" ) Var ( "x" ))) ((((Fun ( 
      "map" ) { #symExpr(149) }) { #symVariable(265) }) Var ( "f" )) Var ( 
      "xs" ))))
    Fun ( "nil2" ) |-> 'fc((#symFunClauses(53) { #symVariable(51) }) = (Con ( 
      "nil" ) { #symVariable(51) }))
    Fun ( "tt" ) |-> \ ( #symExpr(56) : #symExpr(62) ) -> Set ( 1 )
</fun>
