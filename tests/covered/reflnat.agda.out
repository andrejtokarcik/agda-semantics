<k>
    .K
</k>
<mgu>
    subst(.KList)
</mgu>
<ctx-stack>
    .List
</ctx-stack>
<sig>
    Fun ( "Atom" ) |-> ( #symVariable(99) : Data ( "Bool" ) ) -> Set ( 0 )
    Fun ( "Refl" ) |-> Set ( 0 )
    Fun ( "_*_" ) |-> ( #symVariable(52) : Data ( "8469" ) ) -> ( #symVariable
      (53) : Data ( "8469" ) ) -> Data ( "8469" )
    Fun ( "_+_" ) |-> ( #symVariable(9) : Data ( "8469" ) ) -> ( #symVariable(
      10) : Data ( "8469" ) ) -> Data ( "8469" )
    Fun ( "_==Bool_" ) |-> ( #symVariable(112) : Data ( "8469" ) ) -> ( 
      #symVariable(113) : Data ( "8469" ) ) -> Data ( "Bool" )
    Fun ( "_==_" ) |-> ( #symVariable(169) : Data ( "8469" ) ) -> ( 
      #symVariable(170) : Data ( "8469" ) ) -> Set ( 0 )
    Fun ( "refl" ) |-> Fun ( "Refl" )
    Data ( "8469" ) |-> Set ( 0 )
    Data ( "8868" ) |-> Set ( 0 )
    Data ( "8869" ) |-> Set ( 0 )
    Data ( "Bool" ) |-> Set ( 0 )
    Con ( "S" ) |-> ( #symVariable(8) : Data ( "8469" ) ) -> Data ( "8469" )
    Con ( "Z" ) |-> Data ( "8469" )
    Con ( "ff" ) |-> Data ( "Bool" )
    Con ( "true" ) |-> Data ( "8868" )
    Con ( "tt" ) |-> Data ( "Bool" )
</sig>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<ncat>
    Name ( "8469" ) |-> Data ( "8469" )
    Name ( "8868" ) |-> Data ( "8868" )
    Name ( "8869" ) |-> Data ( "8869" )
    Name ( "Atom" ) |-> Fun ( "Atom" )
    Name ( "Bool" ) |-> Data ( "Bool" )
    Name ( "Refl" ) |-> Fun ( "Refl" )
    Name ( "S" ) |-> Con ( "S" )
    Name ( "Z" ) |-> Con ( "Z" )
    Name ( "_*_" ) |-> Fun ( "_*_" )
    Name ( "_+_" ) |-> Fun ( "_+_" )
    Name ( "_==Bool_" ) |-> Fun ( "_==Bool_" )
    Name ( "_==_" ) |-> Fun ( "_==_" )
    Name ( "ff" ) |-> Con ( "ff" )
    Name ( "refl" ) |-> Fun ( "refl" )
    Name ( "true" ) |-> Con ( "true" )
    Name ( "tt" ) |-> Con ( "tt" )
</ncat>
<fun>
    Fun ( "Atom" ) |-> 'fc((#symFunClauses(105) Con ( "tt" )) = Data ( 
      "8868" ),, (#symFunClauses(111) Con ( "ff" )) = Data ( "8869" ))
    Fun ( "Refl" ) |-> ( Var ( "n" ) : Data ( "8469" ) ) -> ((Fun ( "_==_" ) 
      Var ( "n" )) Var ( "n" ))
    Fun ( "_*_" ) |-> 'fc(((#symFunClauses(65) Var ( "n" )) Con ( "Z" )) = Con
       ( "Z" ),, ((#symFunClauses(98) Var ( "n" )) (Con ( "S" ) Var ( "m" ))) 
      = ((Fun ( "_+_" ) ((Fun ( "_*_" ) Var ( "n" )) Var ( "m" ))) Var ( "n" )
      ))
    Fun ( "_+_" ) |-> 'fc(((#symFunClauses(22) Var ( "n" )) Con ( "Z" )) = Var
       ( "n" ),, ((#symFunClauses(51) Var ( "n" )) (Con ( "S" ) Var ( "m" ))) 
      = (Con ( "S" ) ((Fun ( "_+_" ) Var ( "n" )) Var ( "m" ))))
    Fun ( "_==Bool_" ) |-> 'fc(((#symFunClauses(124) Con ( "Z" )) Con ( "Z" ))
       = Con ( "tt" ),, ((#symFunClauses(153) (Con ( "S" ) Var ( "n" ))) (Con 
      ( "S" ) Var ( "m" ))) = ((Fun ( "_==Bool_" ) Var ( "n" )) Var ( "m" ))
      ,, ((#symFunClauses(168) #symExpr(156)) #symExpr(161)) = Con ( "ff" ))
    Fun ( "_==_" ) |-> \ ( Var ( "n" ) : #symExpr(195) ) -> \ ( Var ( "m" ) : 
      #symExpr(198) ) -> (Fun ( "Atom" ) ((Fun ( "_==Bool_" ) Var ( "n" )) Var
       ( "m" )))
    Fun ( "refl" ) |-> 'fc((#symFunClauses(1668) Con ( "Z" )) = Con ( "true" )
      ,, (#symFunClauses(3446) (Con ( "S" ) Var ( "n" ))) = (Fun ( "refl" ) 
      Var ( "n" )))
</fun>
