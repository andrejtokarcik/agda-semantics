<k>
    .K
</k>
<mgu>
    subst(.KList)
</mgu>
<ctx-stack>
    .List
</ctx-stack>
<sig>
    Fun ( "_+_" ) |-> ( #symVariable(4) : Data ( "8469" ) ) -> ( #symVariable(
      5) : Data ( "8469" ) ) -> Data ( "8469" )
    Fun ( "fib" ) |-> ( #symVariable(55) : Data ( "8469" ) ) -> Data ( "8469" 
      )
    Fun ( "one" ) |-> Data ( "8469" )
    Data ( "8469" ) |-> Set ( 0 )
    Con ( "S" ) |-> ( #symVariable(3) : Data ( "8469" ) ) -> Data ( "8469" )
    Con ( "Z" ) |-> Data ( "8469" )
</sig>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<ncat>
    Name ( "8469" ) |-> Data ( "8469" )
    Name ( "S" ) |-> Con ( "S" )
    Name ( "Z" ) |-> Con ( "Z" )
    Name ( "_+_" ) |-> Fun ( "_+_" )
    Name ( "fib" ) |-> Fun ( "fib" )
    Name ( "one" ) |-> Fun ( "one" )
</ncat>
<fun>
    Fun ( "_+_" ) |-> 'fc(((#symFunClauses(17) Var ( "n" )) Con ( "Z" )) = Var
       ( "n" ),, ((#symFunClauses(46) Var ( "n" )) (Con ( "S" ) Var ( "m" ))) 
      = (Con ( "S" ) ((Fun ( "_+_" ) Var ( "n" )) Var ( "m" ))))
    Fun ( "fib" ) |-> 'fc((#symFunClauses(61) Con ( "Z" )) = Fun ( "one" ),, (
      #symFunClauses(71) (Con ( "S" ) Con ( "Z" ))) = Fun ( "one" ),, (
      #symFunClauses(106) (Con ( "S" ) (Con ( "S" ) Var ( "n" )))) = ((Fun ( 
      "_+_" ) (Fun ( "fib" ) Var ( "n" ))) (Fun ( "fib" ) (Con ( "S" ) Var ( 
      "n" )))))
    Fun ( "one" ) |-> (Con ( "S" ) Con ( "Z" ))
</fun>
