<k>
    whnf ( Fun ( "t1" ) ) ~> nf ( HOLE )
</k>
<dbg>
    0
</dbg>
<mgu>
    subst(.KList)
</mgu>
<ctxstack>
    .List
</ctxstack>
<fenv-stack>
    .List
</fenv-stack>
<sig>
    Fun ( "null" ) |-> { Var ( "A" ) : Set ( 0 ) } -> ( #symVariable(65) : (
      Data ( "List" ) Var ( "A" )) ) -> Data ( "Bool" )
    Data ( "Bool" ) |-> Set ( 0 )
    Data ( "List" ) |-> ( Var ( "A" ) : Set ( 0 ) ) -> Set ( 0 )
    Data ( "Nat" ) |-> Set ( 0 )
    Con ( "cons" ) |-> { Var ( "A" ) : Set ( 0 ) } -> ( #symVariable(59) : Var
       ( "A" ) ) -> ( #symVariable(62) : (Data ( "List" ) Var ( "A" )) ) -> (
      Data ( "List" ) Var ( "A" ))
    Con ( "false" ) |-> Data ( "Bool" )
    Con ( "nil" ) |-> { Var ( "A" ) : Set ( 0 ) } -> (Data ( "List" ) Var ( 
      "A" ))
    Con ( "suc" ) |-> ( #symVariable(1) : Data ( "Nat" ) ) -> Data ( "Nat" )
    Con ( "true" ) |-> Data ( "Bool" )
    Con ( "zero" ) |-> Data ( "Nat" )
</sig>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<fenv>
    .Map
</fenv>
<ncat>
    Name ( "Bool" ) |-> Data ( "Bool" )
    Name ( "List" ) |-> Data ( "List" )
    Name ( "Nat" ) |-> Data ( "Nat" )
    Name ( "cons" ) |-> Con ( "cons" )
    Name ( "false" ) |-> Con ( "false" )
    Name ( "nil" ) |-> Con ( "nil" )
    Name ( "null" ) |-> Fun ( "null" )
    Name ( "suc" ) |-> Con ( "suc" )
    Name ( "true" ) |-> Con ( "true" )
    Name ( "zero" ) |-> Con ( "zero" )
</ncat>
<fun>
    Fun ( "null" ) |-> 'FunClauses(((#symFunClauses(35) { (DotP ( #symExpr(17)
       )) }) (Con ( "nil" ) { #symExpr(17) })) = Con ( "true" ),, ((
      #symFunClauses(70) { (DotP ( #symExpr(51) )) }) (((Con ( "cons" ) { 
      #symExpr(51) }) #symExpr(36)) #symExpr(46))) = Con ( "false" ))
</fun>
