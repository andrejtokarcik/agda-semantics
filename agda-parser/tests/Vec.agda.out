<k>
    'FunClauses((#symFunClauses(36537) Con ( "zero" )) = Data ( "Zero" ),, (
      #symFunClauses(36538) (Con ( "suc" ) #symVariable(36539))) = ((Data ( 
      "_+_" ) Data ( "One" )) (Fun ( "Fin" ) #symVariable(36539)))) ~> 
      whnfType ( HOLE ) ~> (HOLE Var ( "n" )) ~> { HOLE } ~> (t ( (Con ( "inl"
       ) { Data ( "One" ) }) , { Var ( "B" ) : Set ( 0 ) } -> ( #symVariable(
      36883) : Data ( "One" ) ) -> ((Data ( "_+_" ) Data ( "One" )) Var ( "B" 
      )) ) HOLE) ~> whnfType ( HOLE ) ~> (HOLE Con ( "unit" )) ~> (t ( Var ( 
      "f" ) , ( #symVariable(36886) : ((Data ( "_+_" ) Data ( "One" )) (
      'FunClauses((#symFunClauses(36537) Con ( "zero" )) = Data ( "Zero" ),, (
      #symFunClauses(36538) (Con ( "suc" ) #symVariable(36539))) = ((Data ( 
      "_+_" ) Data ( "One" )) (Fun ( "Fin" ) #symVariable(36539)))) Var ( "n" 
      ))) ) -> #symExpr(36888) ) HOLE) ~> (t ( (Con ( "pair" ) { #symExpr(
      36901) }) , { Var ( "B" ) : Set ( 0 ) } -> ( #symVariable(34649) : 
      #symExpr(36901) ) -> ( Var ( "x" ) : Var ( "B" ) ) -> ((Data ( "_*_" ) 
      #symExpr(36901)) Var ( "B" )) ) HOLE) ~> whnfType ( HOLE ) ~> (HOLE (
      Name ( "vTab" ) \ ( Var ( "x" ) : %meta ) -> (Var ( "f" ) (Name ( "inr" 
      ) Var ( "x" ))))) ~> whnfType ( HOLE ) ~> prepared! ~> t ( (((Fun ( 
      "vTab" ) { (Con ( "suc" ) Var ( "n" )) }) { #symExpr(36459) }) Var ( "f"
       )) , ((Data ( "_*_" ) #symExpr(36459)) (('FunClauses(((#symFunClauses(
      36671) Con ( "zero" )) #symVariable(36672)) = Data ( "One" ),, ((
      #symFunClauses(36673) (Con ( "suc" ) #symVariable(36674))) #symVariable(
      36675)) = ((Data ( "_*_" ) #symVariable(36675)) ((Fun ( "Vec" ) 
      #symVariable(36674)) #symVariable(36675)))) Var ( "n" )) #symExpr(36459)
      )) ) = HOLE ~> loadCtx ~> data Name ( "Tm" ) ( Var ( "n" ) : Name ( 
      "Nat" ) ) : Set ( 0 ) where Name ( "evar" ) : ( #symVariable(26) : (Name
       ( "Fin" ) Var ( "n" )) ) -> (Name ( "Tm" ) Var ( "n" )) Name ( "eapp" )
       : ( #symVariable(28) : (Name ( "Tm" ) Var ( "n" )) ) -> ( #symVariable(
      27) : (Name ( "Tm" ) Var ( "n" )) ) -> (Name ( "Tm" ) Var ( "n" )) Name 
      ( "elam" ) : ( #symVariable(29) : (Name ( "Tm" ) (Name ( "suc" ) Var ( 
      "n" ))) ) -> (Name ( "Tm" ) Var ( "n" )); (postulate Name ( "Ren" ) : ( 
      #symVariable(30) : Name ( "Nat" ) ) -> ( #symVariable(22) : Name ( "Nat"
       ) ) -> Set ( 0 )); ((Name ( "Ren" ) Var ( "m" )) Var ( "n" )) = ((Name 
      ( "Vec" ) Var ( "m" )) (Name ( "Fin" ) Var ( "n" ))); (postulate Name ( 
      "_`Ren`_" ) : %meta); Name ( "_`Ren`_" ) = Name ( "Ren" ); (postulate 
      Name ( "idR" ) : { Var ( "n" ) : Name ( "Nat" ) } -> ((Name ( "_`Ren`_" 
      ) Var ( "n" )) Var ( "n" ))); Name ( "idR" ) = (Name ( "vTab" ) \ ( Var 
      ( "i" ) : %meta ) -> Var ( "i" )); (postulate Name ( "coR" ) : { Var ( 
      "l" ) : Name ( "Nat" ) } -> { Var ( "m" ) : Name ( "Nat" ) } -> { Var ( 
      "n" ) : Name ( "Nat" ) } -> ( #symVariable(32) : ((Name ( "_`Ren`_" ) 
      Var ( "m" )) Var ( "n" )) ) -> ( #symVariable(31) : ((Name ( "_`Ren`_" )
       Var ( "l" )) Var ( "m" )) ) -> ((Name ( "_`Ren`_" ) Var ( "l" )) Var ( 
      "n" ))); ((Name ( "coR" ) Var ( "m2n" )) Var ( "l2m" )) = ((Name ( 
      "vMap" ) (Name ( "vProj" ) Var ( "m2n" ))) Var ( "l2m" )); (postulate 
      Name ( "liftR" ) : { Var ( "m" ) : Name ( "Nat" ) } -> { Var ( "n" ) : 
      Name ( "Nat" ) } -> ( #symVariable(33) : ((Name ( "_`Ren`_" ) Var ( "m" 
      )) Var ( "n" )) ) -> ((Name ( "_`Ren`_" ) (Name ( "suc" ) Var ( "m" ))) 
      (Name ( "suc" ) Var ( "n" )))); (Name ( "liftR" ) Var ( "m2n" )) = ((
      Name ( "pair" ) (Name ( "inl" ) Name ( "unit" ))) ((Name ( "vMap" ) Name
       ( "inr" )) Var ( "m2n" ))); (postulate Name ( "rename" ) : { Var ( "m" 
      ) : Name ( "Nat" ) } -> { Var ( "n" ) : Name ( "Nat" ) } -> ( 
      #symVariable(35) : ((Name ( "_`Ren`_" ) Var ( "m" )) Var ( "n" )) ) -> (
       #symVariable(34) : (Name ( "Tm" ) Var ( "m" )) ) -> (Name ( "Tm" ) Var 
      ( "n" ))); ((Name ( "rename" ) Var ( "m2n" )) (Name ( "evar" ) Var ( "i"
       ))) = (Name ( "evar" ) ((Name ( "vProj" ) Var ( "m2n" )) Var ( "i" )))
      ; ((Name ( "rename" ) Var ( "m2n" )) ((Name ( "eapp" ) Var ( "f" )) Var 
      ( "s" ))) = ((Name ( "eapp" ) ((Name ( "rename" ) Var ( "m2n" )) Var ( 
      "f" ))) ((Name ( "rename" ) Var ( "m2n" )) Var ( "s" ))); ((Name ( 
      "rename" ) Var ( "m2n" )) (Name ( "elam" ) Var ( "t" ))) = (Name ( 
      "elam" ) ((Name ( "rename" ) (Name ( "liftR" ) Var ( "m2n" ))) Var ( "t"
       ))); (postulate Name ( "Sub" ) : ( #symVariable(30) : Name ( "Nat" ) ) 
      -> ( #symVariable(22) : Name ( "Nat" ) ) -> Set ( 0 )); ((Name ( "Sub" )
       Var ( "m" )) Var ( "n" )) = ((Name ( "Vec" ) Var ( "m" )) (Name ( "Tm" 
      ) Var ( "n" ))); (postulate Name ( "_`Sub`_" ) : %meta); Name ( 
      "_`Sub`_" ) = Name ( "Sub" ); (postulate Name ( "idS" ) : { Var ( "n" ) 
      : Name ( "Nat" ) } -> ((Name ( "_`Sub`_" ) Var ( "n" )) Var ( "n" ))); 
      Name ( "idS" ) = (Name ( "vTab" ) Name ( "evar" )); (postulate Name ( 
      "Ren2Sub" ) : { Var ( "m" ) : Name ( "Nat" ) } -> { Var ( "n" ) : Name (
       "Nat" ) } -> ( #symVariable(36) : ((Name ( "_`Ren`_" ) Var ( "m" )) Var
       ( "n" )) ) -> ((Name ( "_`Sub`_" ) Var ( "m" )) Var ( "n" ))); (Name ( 
      "Ren2Sub" ) Var ( "m2n" )) = ((Name ( "vMap" ) Name ( "evar" )) Var ( 
      "m2n" )); (postulate Name ( "liftS" ) : { Var ( "m" ) : Name ( "Nat" ) }
       -> { Var ( "n" ) : Name ( "Nat" ) } -> ( #symVariable(37) : ((Name ( 
      "_`Sub`_" ) Var ( "m" )) Var ( "n" )) ) -> ((Name ( "_`Sub`_" ) (Name ( 
      "suc" ) Var ( "m" ))) (Name ( "suc" ) Var ( "n" )))); (Name ( "liftS" ) 
      Var ( "m2n" )) = ((Name ( "pair" ) (Name ( "evar" ) (Name ( "inl" ) Name
       ( "unit" )))) ((Name ( "vMap" ) (Name ( "rename" ) ((Name ( "vMap" ) 
      Name ( "inr" )) Name ( "idR" )))) Var ( "m2n" ))); (postulate Name ( 
      "subst" ) : { Var ( "m" ) : Name ( "Nat" ) } -> { Var ( "n" ) : Name ( 
      "Nat" ) } -> ( #symVariable(38) : ((Name ( "_`Sub`_" ) Var ( "m" )) Var 
      ( "n" )) ) -> ( #symVariable(34) : (Name ( "Tm" ) Var ( "m" )) ) -> (
      Name ( "Tm" ) Var ( "n" ))); ((Name ( "subst" ) Var ( "m2n" )) (Name ( 
      "evar" ) Var ( "i" ))) = ((Name ( "vProj" ) Var ( "m2n" )) Var ( "i" ))
      ; ((Name ( "subst" ) Var ( "m2n" )) ((Name ( "eapp" ) Var ( "f" )) Var (
       "s" ))) = ((Name ( "eapp" ) ((Name ( "subst" ) Var ( "m2n" )) Var ( "f"
       ))) ((Name ( "subst" ) Var ( "m2n" )) Var ( "s" ))); ((Name ( "subst" )
       Var ( "m2n" )) (Name ( "elam" ) Var ( "t" ))) = (Name ( "elam" ) ((Name
       ( "subst" ) (Name ( "liftS" ) Var ( "m2n" ))) Var ( "t" ))); (postulate
       Name ( "coS" ) : { Var ( "l" ) : Name ( "Nat" ) } -> { Var ( "m" ) : 
      Name ( "Nat" ) } -> { Var ( "n" ) : Name ( "Nat" ) } -> ( #symVariable(
      40) : ((Name ( "_`Sub`_" ) Var ( "m" )) Var ( "n" )) ) -> ( #symVariable
      (39) : ((Name ( "_`Sub`_" ) Var ( "l" )) Var ( "m" )) ) -> ((Name ( 
      "_`Sub`_" ) Var ( "l" )) Var ( "n" ))); ((Name ( "coS" ) Var ( "m2n" )) 
      Var ( "l2m" )) = ((Name ( "vMap" ) (Name ( "subst" ) Var ( "m2n" ))) Var
       ( "l2m" )) ~> .List{""} ~> .List{""} ~> nf ( Fun ( "t1" ) )
</k>
<dbg>
    0
</dbg>
<mgu>
    subst(.KList)
</mgu>
<ctxstack>
    ListItem(#map ( .Map ))
</ctxstack>
<fenv-stack>
    .List
</fenv-stack>
<sig>
    Fun ( "Fin" ) |-> ( #symVariable(35232) : Data ( "Nat" ) ) -> Set ( 0 )
    Fun ( "Vec" ) |-> ( #symVariable(35235) : Data ( "Nat" ) ) -> ( 
      #symVariable(35238) : Set ( 0 ) ) -> Set ( 0 )
    Fun ( "app" ) |-> { Var ( "A" ) : Set ( 0 ) } -> { Var ( "B" ) : Set ( 0 )
       } -> ( #symVariable(8999) : ((Data ( "_=>_" ) Var ( "A" )) Var ( "B" ))
       ) -> ( #symVariable(9002) : Var ( "A" ) ) -> Var ( "B" )
    Fun ( "lam2" ) |-> { Var ( "A" ) : Set ( 0 ) } -> { Var ( "B" ) : Set ( 0 
      ) } -> { Var ( "C" ) : Set ( 0 ) } -> ( #symVariable(29278) : ( 
      #symVariable(34649) : Var ( "A" ) ) -> ( Var ( "x" ) : Var ( "B" ) ) -> 
      Var ( "C" ) ) -> ((Data ( "_=>_" ) Var ( "A" )) ((Data ( "_=>_" ) Var ( 
      "B" )) Var ( "C" )))
    Fun ( "transpose" ) |-> { Var ( "m" ) : Data ( "Nat" ) } -> { Var ( "n" ) 
      : Data ( "Nat" ) } -> { Var ( "X" ) : Set ( 0 ) } -> ( #symVariable(
      31450) : ((Fun ( "Vec" ) Var ( "m" )) ((Fun ( "Vec" ) Var ( "n" )) Var (
       "X" ))) ) -> ((Fun ( "Vec" ) Var ( "n" )) ((Fun ( "Vec" ) Var ( "m" )) 
      Var ( "X" )))
    Fun ( "vHead" ) |-> { Var ( "X" ) : Set ( 0 ) } -> ( Var ( "n" ) : Data ( 
      "Nat" ) ) -> ( #symVariable(647) : ((Fun ( "Vec" ) (Con ( "suc" ) Var ( 
      "n" ))) Var ( "X" )) ) -> Var ( "X" )
    Fun ( "vMap" ) |-> { Var ( "n" ) : Data ( "Nat" ) } -> { Var ( "S" ) : Set
       ( 0 ) } -> { Var ( "T" ) : Set ( 0 ) } -> ( #symVariable(12325) : ( Var
       ( "x" ) : Var ( "S" ) ) -> Var ( "T" ) ) -> ( #symVariable(12338) : ((
      Fun ( "Vec" ) Var ( "n" )) Var ( "S" )) ) -> ((Fun ( "Vec" ) Var ( "n" )
      ) Var ( "T" ))
    Fun ( "vProj" ) |-> { Var ( "n" ) : Data ( "Nat" ) } -> { Var ( "X" ) : 
      Set ( 0 ) } -> ( #symVariable(35194) : ((Fun ( "Vec" ) Var ( "n" )) Var 
      ( "X" )) ) -> ( #symVariable(35215) : (Fun ( "Fin" ) Var ( "n" )) ) -> 
      Var ( "X" )
    Fun ( "vTab" ) |-> { Var ( "n" ) : Data ( "Nat" ) } -> { Var ( "X" ) : Set
       ( 0 ) } -> ( #symVariable(36845) : ( #symVariable(36886) : (Fun ( "Fin"
       ) Var ( "n" )) ) -> Var ( "X" ) ) -> ((Fun ( "Vec" ) Var ( "n" )) Var (
       "X" ))
    Fun ( "vTail" ) |-> { Var ( "X" ) : Set ( 0 ) } -> ( Var ( "n" ) : Data ( 
      "Nat" ) ) -> ( #symVariable(1216) : ((Fun ( "Vec" ) (Con ( "suc" ) Var (
       "n" ))) Var ( "X" )) ) -> ((Fun ( "Vec" ) Var ( "n" )) Var ( "X" ))
    Fun ( "vapp" ) |-> { Var ( "n" ) : Data ( "Nat" ) } -> { Var ( "S" ) : Set
       ( 0 ) } -> { Var ( "T" ) : Set ( 0 ) } -> ( #symVariable(29289) : ((Fun
       ( "Vec" ) Var ( "n" )) ((Data ( "_=>_" ) Var ( "S" )) Var ( "T" ))) ) 
      -> ( #symVariable(29317) : ((Fun ( "Vec" ) Var ( "n" )) Var ( "S" )) ) 
      -> ((Fun ( "Vec" ) Var ( "n" )) Var ( "T" ))
    Fun ( "vec" ) |-> { Var ( "n" ) : Data ( "Nat" ) } -> { Var ( "X" ) : Set 
      ( 0 ) } -> ( #symVariable(29281) : Var ( "X" ) ) -> ((Fun ( "Vec" ) Var 
      ( "n" )) Var ( "X" ))
    Data ( "Nat" ) |-> Set ( 0 )
    Data ( "One" ) |-> Set ( 0 )
    Data ( "Zero" ) |-> Set ( 0 )
    Data ( "_*_" ) |-> ( Var ( "A" ) : Set ( 0 ) ) -> ( Var ( "B" ) : Set ( 0 
      ) ) -> Set ( 0 )
    Data ( "_+_" ) |-> ( Var ( "A" ) : Set ( 0 ) ) -> ( Var ( "B" ) : Set ( 0 
      ) ) -> Set ( 0 )
    Data ( "_=>_" ) |-> ( Var ( "A" ) : Set ( 0 ) ) -> ( Var ( "B" ) : Set ( 0
       ) ) -> Set ( 0 )
    Con ( "inl" ) |-> { Var ( "A" ) : Set ( 0 ) } -> { Var ( "B" ) : Set ( 0 )
       } -> ( #symVariable(36883) : Var ( "A" ) ) -> ((Data ( "_+_" ) Var ( 
      "A" )) Var ( "B" ))
    Con ( "inr" ) |-> { Var ( "A" ) : Set ( 0 ) } -> { Var ( "B" ) : Set ( 0 )
       } -> ( #symVariable(34697) : Var ( "B" ) ) -> ((Data ( "_+_" ) Var ( 
      "A" )) Var ( "B" ))
    Con ( "lam" ) |-> { Var ( "A" ) : Set ( 0 ) } -> { Var ( "B" ) : Set ( 0 )
       } -> ( #symVariable(14824) : ( Var ( "x" ) : Var ( "A" ) ) -> Var ( "B"
       ) ) -> ((Data ( "_=>_" ) Var ( "A" )) Var ( "B" ))
    Con ( "pair" ) |-> { Var ( "A" ) : Set ( 0 ) } -> { Var ( "B" ) : Set ( 0 
      ) } -> ( #symVariable(34649) : Var ( "A" ) ) -> ( Var ( "x" ) : Var ( 
      "B" ) ) -> ((Data ( "_*_" ) Var ( "A" )) Var ( "B" ))
    Con ( "suc" ) |-> ( #symVariable(36226) : Data ( "Nat" ) ) -> Data ( "Nat"
       )
    Con ( "unit" ) |-> Data ( "One" )
    Con ( "zero" ) |-> Data ( "Nat" )
</sig>
<ctx>
    Var ( "f" ) |-> ( #symVariable(36886) : ((Data ( "_+_" ) Data ( "One" )) (
      'FunClauses((#symFunClauses(36537) Con ( "zero" )) = Data ( "Zero" ),, (
      #symFunClauses(36538) (Con ( "suc" ) #symVariable(36539))) = ((Data ( 
      "_+_" ) Data ( "One" )) (Fun ( "Fin" ) #symVariable(36539)))) Var ( "n" 
      ))) ) -> #symExpr(36888)
    Var ( "n" ) |-> Data ( "Nat" )
</ctx>
<meta>
    #symExpr(36459) |-> t ( #symExpr(36888) , Set ( 0 ) )
    #symExpr(36870) |-> t ( Data ( "One" ) , Set ( 0 ) )
    #symExpr(36878) |-> t ( ('FunClauses((#symFunClauses(36537) Con ( "zero" )
      ) = Data ( "Zero" ),, (#symFunClauses(36538) (Con ( "suc" ) #symVariable
      (36539))) = ((Data ( "_+_" ) Data ( "One" )) (Fun ( "Fin" ) #symVariable
      (36539)))) Var ( "n" )) , Set ( 0 ) )
    #symExpr(36888) |-> t ( #symExpr(36888) , Set ( 0 ) )
    #symExpr(36901) |-> t ( #symExpr(36901) , Set ( 0 ) )
</meta>
<fenv>
    .Map
</fenv>
<ncat>
    Name ( "Fin" ) |-> Fun ( "Fin" )
    Name ( "Nat" ) |-> Data ( "Nat" )
    Name ( "One" ) |-> Data ( "One" )
    Name ( "Vec" ) |-> Fun ( "Vec" )
    Name ( "Zero" ) |-> Data ( "Zero" )
    Name ( "_*_" ) |-> Data ( "_*_" )
    Name ( "_+_" ) |-> Data ( "_+_" )
    Name ( "_=>_" ) |-> Data ( "_=>_" )
    Name ( "app" ) |-> Fun ( "app" )
    Name ( "inl" ) |-> Con ( "inl" )
    Name ( "inr" ) |-> Con ( "inr" )
    Name ( "lam" ) |-> Con ( "lam" )
    Name ( "lam2" ) |-> Fun ( "lam2" )
    Name ( "pair" ) |-> Con ( "pair" )
    Name ( "suc" ) |-> Con ( "suc" )
    Name ( "transpose" ) |-> Fun ( "transpose" )
    Name ( "unit" ) |-> Con ( "unit" )
    Name ( "vHead" ) |-> Fun ( "vHead" )
    Name ( "vMap" ) |-> Fun ( "vMap" )
    Name ( "vProj" ) |-> Fun ( "vProj" )
    Name ( "vTab" ) |-> Fun ( "vTab" )
    Name ( "vTail" ) |-> Fun ( "vTail" )
    Name ( "vapp" ) |-> Fun ( "vapp" )
    Name ( "vec" ) |-> Fun ( "vec" )
    Name ( "zero" ) |-> Con ( "zero" )
</ncat>
<fun>
    Fun ( "Fin" ) |-> 'FunClauses((#symFunClauses(32773) Con ( "zero" )) = 
      Data ( "Zero" ),, (#symFunClauses(32791) (Con ( "suc" ) Var ( "n" ))) = 
      ((Data ( "_+_" ) Data ( "One" )) (Fun ( "Fin" ) Var ( "n" ))))
    Fun ( "Vec" ) |-> 'FunClauses(((#symFunClauses(246) Con ( "zero" )) Var ( 
      "X" )) = Data ( "One" ),, ((#symFunClauses(272) (Con ( "suc" ) Var ( "n"
       ))) Var ( "X" )) = ((Data ( "_*_" ) Var ( "X" )) ((Fun ( "Vec" ) Var ( 
      "n" )) Var ( "X" ))))
    Fun ( "app" ) |-> 'FunClauses(((((#symFunClauses(236) { (DotP ( #symExpr(
      227) )) }) { (DotP ( #symExpr(228) )) }) (((Con ( "lam" ) { #symExpr(227
      ) }) { #symExpr(228) }) Var ( "f" ))) Var ( "x" )) = (Var ( "f" ) Var ( 
      "x" )))
    Fun ( "lam2" ) |-> 'FunClauses(((((#symFunClauses(167) { #symExpr(66) }) {
       #symExpr(74) }) { #symExpr(85) }) Var ( "f" )) = (((Con ( "lam" ) { 
      #symExpr(121) }) { ((Data ( "_=>_" ) #symExpr(99)) #symExpr(110)) }) \ (
       Var ( "x" ) : #symExpr(121) ) -> (((Con ( "lam" ) { #symExpr(99) }) { 
      #symExpr(110) }) (Var ( "f" ) Var ( "x" )))))
    Fun ( "transpose" ) |-> 'FunClauses(((((#symFunClauses(18435) { Con ( 
      "zero" ) }) { #symExpr(16503) }) { #symExpr(17526) }) Var ( "xss" )) = (
      ((Fun ( "vec" ) { #symExpr(17554) }) { Data ( "One" ) }) Con ( "unit" ))
      ,, ((((#symFunClauses(32756) { (Con ( "suc" ) Var ( "m" )) }) { (DotP ( 
      #symExpr(19802) )) }) { (DotP ( #symExpr(22472) )) }) ((((Con ( "pair" )
       { (('FunClauses(((#symFunClauses(20814) Con ( "zero" )) #symVariable(
      20815)) = Data ( "One" ),, ((#symFunClauses(20816) (Con ( "suc" ) 
      #symVariable(20817))) #symVariable(20818)) = ((Data ( "_*_" ) 
      #symVariable(20818)) ((Fun ( "Vec" ) #symVariable(20817)) #symVariable(
      20818)))) 'DotP(#symExpr(19802))) 'DotP(#symExpr(22472))) }) { ((
      'FunClauses(((#symFunClauses(21781) Con ( "zero" )) #symVariable(21782))
       = Data ( "One" ),, ((#symFunClauses(21783) (Con ( "suc" ) #symVariable(
      21784))) #symVariable(21785)) = ((Data ( "_*_" ) #symVariable(21785)) ((
      Fun ( "Vec" ) #symVariable(21784)) #symVariable(21785)))) Var ( "m" )) (
      ('FunClauses(((#symFunClauses(20814) Con ( "zero" )) #symVariable(20815)
      ) = Data ( "One" ),, ((#symFunClauses(20816) (Con ( "suc" ) #symVariable
      (20817))) #symVariable(20818)) = ((Data ( "_*_" ) #symVariable(20818)) (
      (Fun ( "Vec" ) #symVariable(20817)) #symVariable(20818)))) #symExpr(
      19802)) #symExpr(22472))) }) Var ( "xs" )) Var ( "xss" ))) = (((((Fun ( 
      "vapp" ) { #symExpr(25335) }) { (('FunClauses(((#symFunClauses(31004) 
      Con ( "zero" )) #symVariable(31005)) = Data ( "One" ),, ((#symFunClauses
      (31006) (Con ( "suc" ) #symVariable(31007))) #symVariable(31008)) = ((
      Data ( "_*_" ) #symVariable(31008)) ((Fun ( "Vec" ) #symVariable(31007))
       #symVariable(31008)))) Var ( "m" )) #symExpr(31425)) }) { ((Data ( 
      "_*_" ) #symExpr(24306)) (('FunClauses(((#symFunClauses(31004) Con ( 
      "zero" )) #symVariable(31005)) = Data ( "One" ),, ((#symFunClauses(31006
      ) (Con ( "suc" ) #symVariable(31007))) #symVariable(31008)) = ((Data ( 
      "_*_" ) #symVariable(31008)) ((Fun ( "Vec" ) #symVariable(31007)) 
      #symVariable(31008)))) Var ( "m" )) #symExpr(31425))) }) (((((Fun ( 
      "vapp" ) { #symExpr(25335) }) { #symExpr(24306) }) { ((Data ( "_=>_" ) (
      ('FunClauses(((#symFunClauses(31004) Con ( "zero" )) #symVariable(31005)
      ) = Data ( "One" ),, ((#symFunClauses(31006) (Con ( "suc" ) #symVariable
      (31007))) #symVariable(31008)) = ((Data ( "_*_" ) #symVariable(31008)) (
      (Fun ( "Vec" ) #symVariable(31007)) #symVariable(31008)))) Var ( "m" )) 
      #symExpr(31425))) ((Data ( "_*_" ) #symExpr(24306)) (('FunClauses(((
      #symFunClauses(31004) Con ( "zero" )) #symVariable(31005)) = Data ( 
      "One" ),, ((#symFunClauses(31006) (Con ( "suc" ) #symVariable(31007))) 
      #symVariable(31008)) = ((Data ( "_*_" ) #symVariable(31008)) ((Fun ( 
      "Vec" ) #symVariable(31007)) #symVariable(31008)))) Var ( "m" )) 
      #symExpr(31425)))) }) (((Fun ( "vec" ) { #symExpr(25335) }) { ((Data ( 
      "_=>_" ) #symExpr(24306)) ((Data ( "_=>_" ) (('FunClauses(((
      #symFunClauses(31004) Con ( "zero" )) #symVariable(31005)) = Data ( 
      "One" ),, ((#symFunClauses(31006) (Con ( "suc" ) #symVariable(31007))) 
      #symVariable(31008)) = ((Data ( "_*_" ) #symVariable(31008)) ((Fun ( 
      "Vec" ) #symVariable(31007)) #symVariable(31008)))) Var ( "m" )) 
      #symExpr(31425))) ((Data ( "_*_" ) #symExpr(24306)) (('FunClauses(((
      #symFunClauses(31004) Con ( "zero" )) #symVariable(31005)) = Data ( 
      "One" ),, ((#symFunClauses(31006) (Con ( "suc" ) #symVariable(31007))) 
      #symVariable(31008)) = ((Data ( "_*_" ) #symVariable(31008)) ((Fun ( 
      "Vec" ) #symVariable(31007)) #symVariable(31008)))) Var ( "m" )) 
      #symExpr(31425))))) }) ((((Fun ( "lam2" ) { #symExpr(24306) }) { ((
      'FunClauses(((#symFunClauses(31004) Con ( "zero" )) #symVariable(31005))
       = Data ( "One" ),, ((#symFunClauses(31006) (Con ( "suc" ) #symVariable(
      31007))) #symVariable(31008)) = ((Data ( "_*_" ) #symVariable(31008)) ((
      Fun ( "Vec" ) #symVariable(31007)) #symVariable(31008)))) Var ( "m" )) 
      #symExpr(31425)) }) { ((Data ( "_*_" ) #symExpr(24306)) (('FunClauses(((
      #symFunClauses(31004) Con ( "zero" )) #symVariable(31005)) = Data ( 
      "One" ),, ((#symFunClauses(31006) (Con ( "suc" ) #symVariable(31007))) 
      #symVariable(31008)) = ((Data ( "_*_" ) #symVariable(31008)) ((Fun ( 
      "Vec" ) #symVariable(31007)) #symVariable(31008)))) Var ( "m" )) 
      #symExpr(31425))) }) ((Con ( "pair" ) { #symExpr(24306) }) { ((
      'FunClauses(((#symFunClauses(31004) Con ( "zero" )) #symVariable(31005))
       = Data ( "One" ),, ((#symFunClauses(31006) (Con ( "suc" ) #symVariable(
      31007))) #symVariable(31008)) = ((Data ( "_*_" ) #symVariable(31008)) ((
      Fun ( "Vec" ) #symVariable(31007)) #symVariable(31008)))) Var ( "m" )) 
      #symExpr(31425)) })))) Var ( "xs" ))) ((((Fun ( "transpose" ) { Var ( 
      "m" ) }) { #symExpr(25335) }) { #symExpr(31425) }) Var ( "xss" ))))
    Fun ( "vHead" ) |-> 'FunClauses((((#symFunClauses(673) { (DotP ( #symExpr(
      649) )) }) Var ( "n" )) ((((Con ( "pair" ) { (DotP ( #symExpr(649) )) })
       { (('FunClauses(((#symFunClauses(439) Con ( "zero" )) #symVariable(440)
      ) = Data ( "One" ),, ((#symFunClauses(441) (Con ( "suc" ) #symVariable(
      442))) #symVariable(443)) = ((Data ( "_*_" ) #symVariable(443)) ((Fun ( 
      "Vec" ) #symVariable(442)) #symVariable(443)))) Var ( "n" )) #symExpr(
      649)) }) Var ( "a" )) Var ( "b" ))) = Var ( "a" ))
    Fun ( "vMap" ) |-> 'FunClauses((((((#symFunClauses(15139) { #symExpr(11254
      ) }) { #symExpr(11940) }) { #symExpr(12310) }) Var ( "f" )) Var ( "ss" )
      ) = (((((Fun ( "vapp" ) { #symExpr(12720) }) { #symExpr(13911) }) { 
      #symExpr(14634) }) (((Fun ( "vec" ) { #symExpr(12720) }) { ((Data ( 
      "_=>_" ) #symExpr(13911)) #symExpr(14634)) }) (((Con ( "lam" ) { 
      #symExpr(13911) }) { #symExpr(14634) }) Var ( "f" )))) Var ( "ss" )))
    Fun ( "vProj" ) |-> 'FunClauses(((((#symFunClauses(33759) { (Con ( "suc" )
       Var ( "n" )) }) { (DotP ( #symExpr(33742) )) }) ((((Con ( "pair" ) { (
      DotP ( #symExpr(33742) )) }) { (('FunClauses(((#symFunClauses(33388) Con
       ( "zero" )) #symVariable(33389)) = Data ( "One" ),, ((#symFunClauses(
      33390) (Con ( "suc" ) #symVariable(33391))) #symVariable(33392)) = ((
      Data ( "_*_" ) #symVariable(33392)) ((Fun ( "Vec" ) #symVariable(33391))
       #symVariable(33392)))) Var ( "n" )) #symExpr(33742)) }) Var ( "x" )) 
      Var ( "xs" ))) (((Con ( "inl" ) { Data ( "One" ) }) { ('FunClauses((
      #symFunClauses(33565) Con ( "zero" )) = Data ( "Zero" ),, (
      #symFunClauses(33566) (Con ( "suc" ) #symVariable(33567))) = ((Data ( 
      "_+_" ) Data ( "One" )) (Fun ( "Fin" ) #symVariable(33567)))) Var ( "n" 
      )) }) Con ( "unit" ))) = Var ( "x" ),, ((((#symFunClauses(35231) { (Con 
      ( "suc" ) Var ( "n" )) }) { (DotP ( #symExpr(34702) )) }) ((((Con ( 
      "pair" ) { (DotP ( #symExpr(34702) )) }) { (('FunClauses(((
      #symFunClauses(34348) Con ( "zero" )) #symVariable(34349)) = Data ( 
      "One" ),, ((#symFunClauses(34350) (Con ( "suc" ) #symVariable(34351))) 
      #symVariable(34352)) = ((Data ( "_*_" ) #symVariable(34352)) ((Fun ( 
      "Vec" ) #symVariable(34351)) #symVariable(34352)))) Var ( "n" )) 
      #symExpr(34702)) }) Var ( "x" )) Var ( "xs" ))) (((Con ( "inr" ) { Data 
      ( "One" ) }) { ('FunClauses((#symFunClauses(34525) Con ( "zero" )) = 
      Data ( "Zero" ),, (#symFunClauses(34526) (Con ( "suc" ) #symVariable(
      34527))) = ((Data ( "_+_" ) Data ( "One" )) (Fun ( "Fin" ) #symVariable(
      34527)))) Var ( "n" )) }) Var ( "i" ))) = ((((Fun ( "vProj" ) { Var ( 
      "n" ) }) { #symExpr(35217) }) Var ( "xs" )) Var ( "i" )))
    Fun ( "vTab" ) |-> 'FunClauses((((#symFunClauses(35990) { Con ( "zero" ) }
      ) { #symExpr(35703) }) #symExpr(35471)) = Con ( "unit" ))
    Fun ( "vTail" ) |-> 'FunClauses((((#symFunClauses(1504) { (DotP ( #symExpr
      (692) )) }) Var ( "n" )) ((((Con ( "pair" ) { (DotP ( #symExpr(692) )) }
      ) { (('FunClauses(((#symFunClauses(846) Con ( "zero" )) #symVariable(847
      )) = Data ( "One" ),, ((#symFunClauses(848) (Con ( "suc" ) #symVariable(
      849))) #symVariable(850)) = ((Data ( "_*_" ) #symVariable(850)) ((Fun ( 
      "Vec" ) #symVariable(849)) #symVariable(850)))) Var ( "n" )) #symExpr(
      692)) }) Var ( "a" )) Var ( "b" ))) = Var ( "b" ))
    Fun ( "vapp" ) |-> 'FunClauses((((((#symFunClauses(5497) { Con ( "zero" ) 
      }) { #symExpr(4624) }) { #symExpr(5232) }) Con ( "unit" )) Con ( "unit" 
      )) = Con ( "unit" ),, (((((#symFunClauses(11239) { (Con ( "suc" ) Var ( 
      "n" )) }) { (DotP ( #symExpr(6536) )) }) { (DotP ( #symExpr(8807) )) }) 
      ((((Con ( "pair" ) { ((Data ( "_=>_" ) 'DotP(#symExpr(6536))) 'DotP(
      #symExpr(8807))) }) { (('FunClauses(((#symFunClauses(8083) Con ( "zero" 
      )) #symVariable(8084)) = Data ( "One" ),, ((#symFunClauses(8085) (Con ( 
      "suc" ) #symVariable(8086))) #symVariable(8087)) = ((Data ( "_*_" ) 
      #symVariable(8087)) ((Fun ( "Vec" ) #symVariable(8086)) #symVariable(
      8087)))) Var ( "n" )) ((Data ( "_=>_" ) 'DotP(#symExpr(6536))) #symExpr(
      8807))) }) Var ( "f" )) Var ( "fs" ))) ((((Con ( "pair" ) { (DotP ( 
      #symExpr(6536) )) }) { (('FunClauses(((#symFunClauses(8297) Con ( "zero"
       )) #symVariable(8298)) = Data ( "One" ),, ((#symFunClauses(8299) (Con (
       "suc" ) #symVariable(8300))) #symVariable(8301)) = ((Data ( "_*_" ) 
      #symVariable(8301)) ((Fun ( "Vec" ) #symVariable(8300)) #symVariable(
      8301)))) Var ( "n" )) #symExpr(6536)) }) Var ( "s" )) Var ( "ss" ))) = (
      (((Con ( "pair" ) { #symExpr(9006) }) { (('FunClauses(((#symFunClauses(
      10295) Con ( "zero" )) #symVariable(10296)) = Data ( "One" ),, ((
      #symFunClauses(10297) (Con ( "suc" ) #symVariable(10298))) #symVariable(
      10299)) = ((Data ( "_*_" ) #symVariable(10299)) ((Fun ( "Vec" ) 
      #symVariable(10298)) #symVariable(10299)))) Var ( "n" )) #symExpr(10560)
      ) }) ((((Fun ( "app" ) { #symExpr(9003) }) { #symExpr(9006) }) Var ( "f"
       )) Var ( "s" ))) (((((Fun ( "vapp" ) { Var ( "n" ) }) { #symExpr(10018)
       }) { #symExpr(10560) }) Var ( "fs" )) Var ( "ss" ))))
    Fun ( "vec" ) |-> 'FunClauses((((#symFunClauses(2088) { Con ( "zero" ) }) 
      { #symExpr(1834) }) Var ( "x" )) = Con ( "unit" ),, (((#symFunClauses(
      3591) { (Con ( "suc" ) Var ( "n" )) }) { #symExpr(2637) }) Var ( "x" )) 
      = ((((Con ( "pair" ) { #symExpr(2663) }) { (('FunClauses(((
      #symFunClauses(2820) Con ( "zero" )) #symVariable(2821)) = Data ( "One" 
      ),, ((#symFunClauses(2822) (Con ( "suc" ) #symVariable(2823))) 
      #symVariable(2824)) = ((Data ( "_*_" ) #symVariable(2824)) ((Fun ( "Vec"
       ) #symVariable(2823)) #symVariable(2824)))) #symExpr(2665)) #symExpr(
      2978)) }) Var ( "x" )) (((Fun ( "vec" ) { #symExpr(2665) }) { #symExpr(
      2978) }) Var ( "x" ))))
</fun>
