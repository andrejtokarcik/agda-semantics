<T>
    <k>
        .K
    </k>
    <mgu>
        subst(.KList)
    </mgu>
    <metadata>
        <range>
            .K
        </range>
    </metadata>
    <con>
        Data ( "Bool" ) |-> c ( ListItem(Con ( "false" )) ListItem(Con ( 
          "true" )) )
        Data ( "False" ) |-> c ( .List )
        Data ( "Nat" ) |-> c ( ListItem(Con ( "zero" )) ListItem(Con ( "suc" )
          ) )
        Data ( "True" ) |-> c ( ListItem(Con ( "tt" )) )
    </con>
    <funtenvs>
        Fun ( "_==_" ) |-> m ( Var ( "m" ) |-> Data ( "Nat" ) Var ( "n" ) |-> 
          Data ( "Nat" ) )
        Fun ( "even" ) |-> m ( Var ( "n" ) |-> Data ( "Nat" ) )
        Fun ( "id" ) |-> m ( Var ( "A" ) |-> Set ( 0 ) Var ( "x" ) |-> Var ( 
          "A" ) )
        Fun ( "odd" ) |-> m ( Var ( "n" ) |-> Data ( "Nat" ) )
        Fun ( "one" ) |-> m ( .Map )
        Fun ( "plus" ) |-> m ( Var ( "m" ) |-> Data ( "Nat" ) Var ( "n" ) |-> 
          Data ( "Nat" ) )
        Fun ( "thmPlusZero" ) |-> m ( Var ( "n" ) |-> Data ( "Nat" ) )
    </funtenvs>
    <metavars>
        .Map
    </metavars>
    <fenv>
        Fun ( "_==_" ) |-> FunClauses ( 2 , ListItem(((%fun Con ( "zero" )) 
          Con ( "zero" )) = Data ( "True" )) ListItem(((%fun Con ( "zero" )) (
          Con ( "suc" ) Var ( "m" ))) = Data ( "False" )) ListItem(((%fun (Con
           ( "suc" ) Var ( "n" ))) Con ( "zero" )) = Data ( "False" )) 
          ListItem(((%fun (Con ( "suc" ) Var ( "n" ))) (Con ( "suc" ) Var ( 
          "m" ))) = ((Fun ( "_==_" ) Var ( "n" )) Var ( "m" ))) )
        Fun ( "even" ) |-> FunClauses ( 1 , ListItem((%fun Con ( "zero" )) = 
          Con ( "true" )) ListItem((%fun (Con ( "suc" ) Var ( "n" ))) = (Fun (
           "odd" ) Var ( "n" ))) )
        Fun ( "id" ) |-> FunClauses ( 2 , ListItem(((%fun Var ( "A" )) Var ( 
          "x" )) = Var ( "x" )) )
        Fun ( "odd" ) |-> FunClauses ( 1 , ListItem((%fun Con ( "zero" )) = 
          Con ( "false" )) ListItem((%fun (Con ( "suc" ) Var ( "n" ))) = (Fun 
          ( "even" ) Var ( "n" ))) )
        Fun ( "one" ) |-> ((Fun ( "id" ) Data ( "Nat" )) (Con ( "suc" ) Con ( 
          "zero" )))
        Fun ( "plus" ) |-> FunClauses ( 2 , ListItem(((%fun Con ( "zero" )) 
          Var ( "m" )) = Var ( "m" )) ListItem(((%fun (Con ( "suc" ) Var ( "n"
           ))) Var ( "m" )) = (Con ( "suc" ) ((Fun ( "plus" ) Var ( "n" )) Var
           ( "m" )))) )
        Fun ( "thmPlusZero" ) |-> FunClauses ( 1 , ListItem((%fun (Con ( "suc"
           ) Var ( "n" ))) = (Fun ( "thmPlusZero" ) Var ( "n" ))) )
    </fenv>
    <tenv>
        .Map
    </tenv>
    <sig>
        Fun ( "N" ) |-> Set ( 0 )
        Fun ( "_==_" ) |-> ( #symVariable(130) : Data ( "Nat" ) ) -> ( 
          #symVariable(133) : Data ( "Nat" ) ) -> Set ( 0 )
        Fun ( "even" ) |-> ( #symVariable(58) : Data ( "Nat" ) ) -> Data ( 
          "Bool" )
        Fun ( "id" ) |-> ( Var ( "A" ) : Set ( 0 ) ) -> ( #symVariable(75) : 
          Var ( "A" ) ) -> Var ( "A" )
        Fun ( "odd" ) |-> ( #symVariable(58) : Data ( "Nat" ) ) -> Data ( 
          "Bool" )
        Fun ( "one" ) |-> Data ( "Nat" )
        Fun ( "plus" ) |-> ( #symVariable(124) : Data ( "Nat" ) ) -> ( 
          #symVariable(137) : Data ( "Nat" ) ) -> Data ( "Nat" )
        Fun ( "s" ) |-> ( #symVariable(1) : Fun ( "N" ) ) -> Fun ( "N" )
        Fun ( "thmPlusZero" ) |-> ( Var ( "n" ) : Data ( "Nat" ) ) -> ((Fun ( 
          "_==_" ) ((Fun ( "plus" ) Var ( "n" )) Con ( "zero" ))) Var ( "n" ))
        Fun ( "z" ) |-> Fun ( "N" )
        Data ( "Bool" ) |-> Set ( 0 )
        Data ( "False" ) |-> Set ( 0 )
        Data ( "Nat" ) |-> Set ( 0 )
        Data ( "True" ) |-> Set ( 0 )
        Con ( "false" ) |-> Data ( "Bool" )
        Con ( "suc" ) |-> ( #symVariable(137) : Data ( "Nat" ) ) -> Data ( 
          "Nat" )
        Con ( "true" ) |-> Data ( "Bool" )
        Con ( "tt" ) |-> Data ( "True" )
        Con ( "zero" ) |-> Data ( "Nat" )
    </sig>
    <ncat>
        Name ( "Bool" ) |-> Data ( "Bool" )
        Name ( "False" ) |-> Data ( "False" )
        Name ( "N" ) |-> Fun ( "N" )
        Name ( "Nat" ) |-> Data ( "Nat" )
        Name ( "True" ) |-> Data ( "True" )
        Name ( "_==_" ) |-> Fun ( "_==_" )
        Name ( "even" ) |-> Fun ( "even" )
        Name ( "false" ) |-> Con ( "false" )
        Name ( "id" ) |-> Fun ( "id" )
        Name ( "odd" ) |-> Fun ( "odd" )
        Name ( "one" ) |-> Fun ( "one" )
        Name ( "plus" ) |-> Fun ( "plus" )
        Name ( "s" ) |-> Fun ( "s" )
        Name ( "suc" ) |-> Con ( "suc" )
        Name ( "thmPlusZero" ) |-> Fun ( "thmPlusZero" )
        Name ( "true" ) |-> Con ( "true" )
        Name ( "tt" ) |-> Con ( "tt" )
        Name ( "z" ) |-> Fun ( "z" )
        Name ( "zero" ) |-> Con ( "zero" )
    </ncat>
</T>
