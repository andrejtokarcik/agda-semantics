<k>
    whnf ( Fun ( "t1" ) ) ~> nf ( HOLE )
</k>
<dbg>
    0
</dbg>
<mgu>
    subst(.KList)
</mgu>
<ctxstack>
    .List
</ctxstack>
<fenv-stack>
    .List
</fenv-stack>
<sig>
    Fun ( "PlantsInGroup" ) |-> ( #symVariable(14) : Data ( "PlantGroup" ) ) 
      -> Set ( 0 )
    Fun ( "f" ) |-> ( #symVariable(69) : Data ( "Plant" ) ) -> Data ( 
      "PlantGroup" )
    Data ( "Flower" ) |-> Set ( 0 )
    Data ( "Plant" ) |-> Set ( 0 )
    Data ( "PlantGroup" ) |-> Set ( 0 )
    Data ( "Tree" ) |-> Set ( 0 )
    Con ( "flower" ) |-> Data ( "PlantGroup" )
    Con ( "lily" ) |-> Data ( "Flower" )
    Con ( "oak" ) |-> Data ( "Tree" )
    Con ( "pine" ) |-> Data ( "Tree" )
    Con ( "plant" ) |-> ( Var ( "g" ) : Data ( "PlantGroup" ) ) -> ( 
      #symVariable(62) : (Fun ( "PlantsInGroup" ) Var ( "g" )) ) -> Data ( 
      "Plant" )
    Con ( "rose" ) |-> Data ( "Flower" )
    Con ( "spruce" ) |-> Data ( "Tree" )
    Con ( "tree" ) |-> Data ( "PlantGroup" )
</sig>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<fenv>
    .Map
</fenv>
<ncat>
    Name ( "Flower" ) |-> Data ( "Flower" )
    Name ( "Plant" ) |-> Data ( "Plant" )
    Name ( "PlantGroup" ) |-> Data ( "PlantGroup" )
    Name ( "PlantsInGroup" ) |-> Fun ( "PlantsInGroup" )
    Name ( "Tree" ) |-> Data ( "Tree" )
    Name ( "f" ) |-> Fun ( "f" )
    Name ( "flower" ) |-> Con ( "flower" )
    Name ( "lily" ) |-> Con ( "lily" )
    Name ( "oak" ) |-> Con ( "oak" )
    Name ( "pine" ) |-> Con ( "pine" )
    Name ( "plant" ) |-> Con ( "plant" )
    Name ( "rose" ) |-> Con ( "rose" )
    Name ( "spruce" ) |-> Con ( "spruce" )
    Name ( "tree" ) |-> Con ( "tree" )
</ncat>
<fun>
    Fun ( "PlantsInGroup" ) |-> 'FunClauses((#symFunClauses(8) Con ( "tree" ))
       = Data ( "Tree" ),, (#symFunClauses(13) Con ( "flower" )) = Data ( 
      "Flower" ))
    Fun ( "f" ) |-> 'FunClauses((#symFunClauses(73) ((Con ( "plant" ) Var ( 
      "g" )) Var ( "pg" ))) = Var ( "g" ))
</fun>
