<k>
    whnf ( Fun ( "t1" ) ) ~> nf ( HOLE )
</k>
<dbg>
    0
</dbg>
<mgu>
    subst(.KList)
</mgu>
<ctxstack>
    .List
</ctxstack>
<sig>
    Fun ( "_*_" ) |-> ( #symVariable(47) : Data ( "Nat" ) ) -> ( #symVariable(
      48) : Data ( "Nat" ) ) -> Data ( "Nat" )
    Fun ( "_+_" ) |-> ( #symVariable(4) : Data ( "Nat" ) ) -> ( #symVariable(5
      ) : Data ( "Nat" ) ) -> Data ( "Nat" )
    Fun ( "f" ) |-> Data ( "Nat" )
    Fun ( "g" ) |-> ( #symVariable(215) : Data ( "Nat" ) ) -> Data ( "Nat" )
    Fun ( "h" ) |-> ( #symVariable(158) : Data ( "Nat" ) ) -> Data ( "Nat" )
    Fun ( "k" ) |-> ( #symVariable(355) : Data ( "Nat" ) ) -> Data ( "Nat" )
    Data ( "Nat" ) |-> Set ( 0 )
    Con ( "succ" ) |-> ( #symVariable(3) : Data ( "Nat" ) ) -> Data ( "Nat" )
    Con ( "zero" ) |-> Data ( "Nat" )
</sig>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<ncat>
    Name ( "Nat" ) |-> Data ( "Nat" )
    Name ( "_*_" ) |-> Fun ( "_*_" )
    Name ( "_+_" ) |-> Fun ( "_+_" )
    Name ( "f" ) |-> Fun ( "f" )
    Name ( "g" ) |-> Fun ( "g" )
    Name ( "h" ) |-> Fun ( "h" )
    Name ( "k" ) |-> Fun ( "k" )
    Name ( "succ" ) |-> Con ( "succ" )
    Name ( "zero" ) |-> Con ( "zero" )
</ncat>
<fun>
    Fun ( "_*_" ) |-> 'fc(((#symFunClauses(61) Con ( "zero" )) #symExpr(54)) =
       Con ( "zero" ),, ((#symFunClauses(94) (Con ( "succ" ) Var ( "m" ))) Var
       ( "n" )) = ((Fun ( "_+_" ) Var ( "n" )) ((Fun ( "_*_" ) Var ( "m" )) 
      Var ( "n" ))))
    Fun ( "_+_" ) |-> 'fc(((#symFunClauses(17) Con ( "zero" )) Var ( "n" )) = 
      Var ( "n" ),, ((#symFunClauses(46) (Con ( "succ" ) Var ( "m" ))) Var ( 
      "n" )) = (Con ( "succ" ) ((Fun ( "_+_" ) Var ( "m" )) Var ( "n" ))))
    Fun ( "f" ) |-> ((Fun ( "_+_" ) (Fun ( "h" ) @ Fun ( "h" ) |-> ( 
      #symVariable(95) : Data ( "Nat" ) ) -> Data ( "Nat" ) Con ( "zero" ))) (
      Fun ( "h" ) @ Fun ( "h" ) |-> ( #symVariable(95) : Data ( "Nat" ) ) -> 
      Data ( "Nat" ) (Con ( "succ" ) Con ( "zero" ))))
    Fun ( "g" ) |-> \ ( Var ( "n" ) : #symExpr(336) ) -> ((Fun ( "_+_" ) (Fun 
      ( "fib" ) @ Fun ( "fact" ) |-> 'fc((#symFunClauses(286) Con ( "zero" )) 
      = (Con ( "succ" ) Con ( "zero" )),, (#symFunClauses(313) (Con ( "succ" )
       Var ( "n" ))) = ((Fun ( "_*_" ) (Con ( "succ" ) Var ( "n" ))) (Fun ( 
      "fact" ) Var ( "n" )))) Fun ( "fib" ) |-> 'fc((#symFunClauses(226) Con (
       "zero" )) = (Con ( "succ" ) Con ( "zero" )),, (#symFunClauses(240) (Con
       ( "succ" ) Con ( "zero" ))) = (Con ( "succ" ) Con ( "zero" )),, (
      #symFunClauses(275) (Con ( "succ" ) (Con ( "succ" ) Var ( "n" )))) = ((
      Fun ( "_+_" ) (Fun ( "fib" ) (Con ( "succ" ) Var ( "n" )))) (Fun ( "fib"
       ) Var ( "n" )))) Var ( "n" ))) (Fun ( "fact" ) @ Fun ( "fact" ) |-> 'fc
      ((#symFunClauses(286) Con ( "zero" )) = (Con ( "succ" ) Con ( "zero" ))
      ,, (#symFunClauses(313) (Con ( "succ" ) Var ( "n" ))) = ((Fun ( "_*_" ) 
      (Con ( "succ" ) Var ( "n" ))) (Fun ( "fact" ) Var ( "n" )))) Fun ( "fib"
       ) |-> 'fc((#symFunClauses(226) Con ( "zero" )) = (Con ( "succ" ) Con ( 
      "zero" )),, (#symFunClauses(240) (Con ( "succ" ) Con ( "zero" ))) = (Con
       ( "succ" ) Con ( "zero" )),, (#symFunClauses(275) (Con ( "succ" ) (Con 
      ( "succ" ) Var ( "n" )))) = ((Fun ( "_+_" ) (Fun ( "fib" ) (Con ( "succ"
       ) Var ( "n" )))) (Fun ( "fib" ) Var ( "n" )))) Var ( "n" )))
    Fun ( "h" ) |-> \ ( Var ( "n" ) : #symExpr(208) ) -> (Fun ( "twice" ) @ 
      Fun ( "add2" ) |-> Data ( "Nat" ) Fun ( "twice" ) |-> ( #symVariable(180
      ) : Data ( "Nat" ) ) -> Data ( "Nat" ) Fun ( "add2" ) @ Fun ( "add2" )
       |-> Data ( "Nat" ) Fun ( "twice" ) |-> ( #symVariable(180) : Data ( 
      "Nat" ) ) -> Data ( "Nat" ))
    Fun ( "k" ) |-> \ ( Var ( "n" ) : #symExpr(435) ) -> (Fun ( "aux" ) @ Fun 
      ( "aux" ) |-> ( #symVariable(379) : Data ( "Nat" ) ) -> Data ( "Nat" ) (
      Fun ( "pred" ) @ Fun ( "pred" ) |-> 'fc((#symFunClauses(362) Con ( 
      "zero" )) = Con ( "zero" ),, (#symFunClauses(373) (Con ( "succ" ) Var ( 
      "m" ))) = Var ( "m" )) Var ( "n" )))
</fun>
