<k>
    whnf ( Fun ( "t1" ) ) ~> nf ( HOLE )
</k>
<dbg>
    0
</dbg>
<mgu>
    subst(.KList)
</mgu>
<ctxstack>
    .List
</ctxstack>
<fenv-stack>
    .List
</fenv-stack>
<sig>
    Fun ( "_+_" ) |-> ( #symVariable(68) : Data ( "8469" ) ) -> ( #symVariable
      (71) : Data ( "8469" ) ) -> Data ( "8469" )
    Fun ( "fib" ) |-> ( #symVariable(74) : Data ( "8469" ) ) -> Data ( "8469" 
      )
    Fun ( "one" ) |-> Data ( "8469" )
    Data ( "8469" ) |-> Set ( 0 )
    Con ( "S" ) |-> ( #symVariable(71) : Data ( "8469" ) ) -> Data ( "8469" )
    Con ( "Z" ) |-> Data ( "8469" )
</sig>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<fenv>
    .Map
</fenv>
<ncat>
    Name ( "8469" ) |-> Data ( "8469" )
    Name ( "S" ) |-> Con ( "S" )
    Name ( "Z" ) |-> Con ( "Z" )
    Name ( "_+_" ) |-> Fun ( "_+_" )
    Name ( "fib" ) |-> Fun ( "fib" )
    Name ( "one" ) |-> Fun ( "one" )
</ncat>
<fun>
    Fun ( "_+_" ) |-> 'FunClauses(((#symFunClauses(12) Var ( "n" )) Con ( "Z" 
      )) = Var ( "n" ),, ((#symFunClauses(35) Var ( "n" )) (Con ( "S" ) Var ( 
      "m" ))) = (Con ( "S" ) ((Fun ( "_+_" ) Var ( "n" )) Var ( "m" ))))
    Fun ( "fib" ) |-> 'FunClauses((#symFunClauses(46) Con ( "Z" )) = Fun ( 
      "one" ),, (#symFunClauses(54) (Con ( "S" ) Con ( "Z" ))) = Fun ( "one" )
      ,, (#symFunClauses(81) (Con ( "S" ) (Con ( "S" ) Var ( "n" )))) = ((Fun 
      ( "_+_" ) (Fun ( "fib" ) Var ( "n" ))) (Fun ( "fib" ) (Con ( "S" ) Var (
       "n" )))))
    Fun ( "one" ) |-> (Con ( "S" ) Con ( "Z" ))
</fun>
