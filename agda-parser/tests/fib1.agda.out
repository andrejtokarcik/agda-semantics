<k>
    .K
</k>
<mgu>
    subst(.KList)
</mgu>
<ctxstack>
    .List
</ctxstack>
<sig>
    Fun ( "_+_" ) |-> ( #symVariable(62) : Data ( "8469" ) ) -> ( #symVariable
      (65) : Data ( "8469" ) ) -> Data ( "8469" )
    Fun ( "fib" ) |-> ( #symVariable(68) : Data ( "8469" ) ) -> Data ( "8469" 
      )
    Fun ( "one" ) |-> Data ( "8469" )
    Data ( "8469" ) |-> Set ( 0 )
    Con ( "S" ) |-> ( #symVariable(65) : Data ( "8469" ) ) -> Data ( "8469" )
    Con ( "Z" ) |-> Data ( "8469" )
</sig>
<con>
    Data ( "8469" ) |-> l ( ListItem(Con ( "Z" )) ListItem(Con ( "S" )) )
</con>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<ncat>
    Name ( "8469" ) |-> Data ( "8469" )
    Name ( "S" ) |-> Con ( "S" )
    Name ( "Z" ) |-> Con ( "Z" )
    Name ( "_+_" ) |-> Fun ( "_+_" )
    Name ( "fib" ) |-> Fun ( "fib" )
    Name ( "one" ) |-> Fun ( "one" )
</ncat>
<fun>
    Fun ( "_+_" ) |-> FunClauses ( ListItem(((#symFunClauses(10) Var ( "n" )) 
      Con ( "Z" )) = Var ( "n" )) ListItem(((#symFunClauses(31) Var ( "n" )) (
      Con ( "S" ) Var ( "m" ))) = (Con ( "S" ) ((Fun ( "_+_" ) Var ( "n" )) 
      Var ( "m" )))) )
    Fun ( "fib" ) |-> FunClauses ( ListItem((#symFunClauses(41) Con ( "Z" )) =
       Fun ( "one" )) ListItem((#symFunClauses(48) (Con ( "S" ) Con ( "Z" ))) 
      = Fun ( "one" )) ListItem((#symFunClauses(74) (Con ( "S" ) (Con ( "S" ) 
      Var ( "n" )))) = ((Fun ( "_+_" ) (Fun ( "fib" ) Var ( "n" ))) (Fun ( 
      "fib" ) (Con ( "S" ) Var ( "n" ))))) )
    Fun ( "one" ) |-> (Con ( "S" ) Con ( "Z" ))
</fun>
