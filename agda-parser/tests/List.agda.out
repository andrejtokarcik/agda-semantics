<k>
    .K
</k>
<mgu>
    subst(.KList)
</mgu>
<ctxstack>
    .List
</ctxstack>
<sig>
    Fun ( "map" ) |-> { Var ( "a" ) : Set ( 0 ) } -> { Var ( "b" ) : Set ( 0 )
       } -> ( #symVariable(99) : ( #symVariable(89) : Var ( "a" ) ) -> Var ( 
      "b" ) ) -> ( #symVariable(102) : (Data ( "List" ) Var ( "a" )) ) -> (
      Data ( "List" ) Var ( "b" ))
    Fun ( "nil2" ) |-> (\ ( Var ( "x" ) : Set ( 1 ) ) -> Var ( "x" ) { Var ( 
      "a" ) : Set ( 0 ) } -> (Data ( "List" ) Var ( "a" )))
    Fun ( "tt" ) |-> ( #symVariable(32) : Set ( 1 ) ) -> Set ( 2 )
    Data ( "List" ) |-> ( Var ( "a" ) : Set ( 0 ) ) -> Set ( 0 )
    Con ( "_::_" ) |-> { Var ( "a" ) : Set ( 0 ) } -> ( #symVariable(92) : Var
       ( "a" ) ) -> ( #symVariable(105) : (Data ( "List" ) Var ( "a" )) ) -> (
      Data ( "List" ) Var ( "a" ))
    Con ( "nil" ) |-> { Var ( "a" ) : Set ( 0 ) } -> (Data ( "List" ) Var ( 
      "a" ))
</sig>
<con>
    (Data ( "List" ) Var ( "a" )) |-> l ( ListItem(Con ( "nil" )) ListItem(Con
       ( "_::_" )) )
</con>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<ncat>
    Name ( "List" ) |-> Data ( "List" )
    Name ( "_::_" ) |-> Con ( "_::_" )
    Name ( "map" ) |-> Fun ( "map" )
    Name ( "nil" ) |-> Con ( "nil" )
    Name ( "nil2" ) |-> Fun ( "nil2" )
    Name ( "tt" ) |-> Fun ( "tt" )
</ncat>
<fun>
    Fun ( "map" ) |-> FunClauses ( ListItem(((((#symFunClauses(62) { #symExpr(
      45) }) { #symExpr(47) }) Var ( "f" )) (Con ( "nil" ) { #symExpr(45) })) 
      = (Con ( "nil" ) { #symExpr(60) })) ListItem(((((#symFunClauses(108) { 
      #symExpr(66) }) { #symExpr(68) }) Var ( "f" )) (((Con ( "_::_" ) { 
      #symExpr(66) }) Var ( "x" )) Var ( "xs" ))) = (((Con ( "_::_" ) { 
      #symExpr(93) }) (Var ( "f" ) Var ( "x" ))) ((((Fun ( "map" ) { #symExpr(
      95) }) { #symExpr(93) }) Var ( "f" )) Var ( "xs" )))) )
    Fun ( "nil2" ) |-> FunClauses ( ListItem((#symFunClauses(29) { #symExpr(27
      ) }) = (Con ( "nil" ) { #symExpr(25) })) )
    Fun ( "tt" ) |-> \ ( #symExpr(30) : #symExpr(35) ) -> Set ( 1 )
</fun>
