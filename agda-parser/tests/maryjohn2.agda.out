<k>
    whnf ( Fun ( "t1" ) ) ~> nf ( HOLE )
</k>
<dbg>
    0
</dbg>
<mgu>
    subst(.KList)
</mgu>
<ctxstack>
    .List
</ctxstack>
<sig>
    Name ( "Person" ) |-> Set ( 0 )
    Name ( "implication" ) |-> ( #symVariable(17) : (Name ( "IsStudent" ) Name
       ( "mary" )) ) -> (Name ( "IsStudent" ) Name ( "john" ))
    Name ( "mary" ) |-> Name ( "Person" )
    Name ( "maryIsStudent" ) |-> (Name ( "IsStudent" ) Name ( "mary" ))
    Fun ( "Lemma1" ) |-> Set ( 0 )
    Fun ( "Lemma2" ) |-> Set ( 0 )
    Fun ( "proof-lemma1" ) |-> Fun ( "Lemma1" )
    Fun ( "proof-lemma2" ) |-> Fun ( "Lemma2" )
    'Postulate("IsStudent") |-> ( #symVariable(4) : Name ( "Person" ) ) -> Set
       ( 0 )
    'Postulate("barbara") |-> Name ( "Person" )
    'Postulate("john") |-> Name ( "Person" )
</sig>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<ncat>
    Name ( "IsStudent" ) |-> 'Postulate("IsStudent")
    Name ( "Lemma1" ) |-> Fun ( "Lemma1" )
    Name ( "Lemma2" ) |-> Fun ( "Lemma2" )
    Name ( "barbara" ) |-> 'Postulate("barbara")
    Name ( "john" ) |-> 'Postulate("john")
    Name ( "proof-lemma1" ) |-> Fun ( "proof-lemma1" )
    Name ( "proof-lemma2" ) |-> Fun ( "proof-lemma2" )
</ncat>
<fun>
    Fun ( "Lemma1" ) |-> (Name ( "IsStudent" ) Name ( "john" ))
    Fun ( "Lemma2" ) |-> ( #symVariable(42) : (Postulate ( "IsStudent" ) 
      Postulate ( "john" )) ) -> (Postulate ( "IsStudent" ) Name ( "barbara" )
      )
    Fun ( "proof-lemma1" ) |-> (Name ( "implication" ) Name ( "maryIsStudent" 
      ))
    Fun ( "proof-lemma2" ) |-> \ ( #symVariable(58) : (Postulate ( "IsStudent"
       ) Postulate ( "john" )) ) -> #symExpr(56)
</fun>
