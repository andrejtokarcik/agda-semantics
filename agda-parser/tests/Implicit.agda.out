<T>
    <k>
        .K
    </k>
    <mgu>
        subst(.KList)
    </mgu>
    <tenvRestore>
        .List
    </tenvRestore>
    <metadata>
        <range>
            .K
        </range>
    </metadata>
    <con>
        Data ( "Nat" ) |-> l ( ListItem(Con ( "zero" )) ListItem(Con ( "suc" )
          ) )
    </con>
    <funtenvs>
        Fun ( "zero4" ) |-> m ( .Map )
    </funtenvs>
    <metavars>
        .Map
    </metavars>
    <fenv>
        Fun ( "four" ) |-> ((Fun ( "id" ) { Data ( "Nat" ) }) (Con ( "suc" ) 
          Fun ( "three" )))
        Fun ( "id" ) |-> FunClauses ( ListItem(((#symFunClauses(40) { #symExpr
          (39) }) Var ( "x" )) = Var ( "x" )) )
        Fun ( "id'" ) |-> FunClauses ( ListItem(((#symFunClauses(11) #symExpr(
          10)) Var ( "x" )) = Var ( "x" )) )
        Fun ( "id0" ) |-> FunClauses ( ListItem(((#symFunClauses(68) #symExpr(
          67)) Var ( "x" )) = Var ( "x" )) )
        Fun ( "id1" ) |-> FunClauses ( ListItem(((#symFunClauses(78) #symExpr(
          77)) Var ( "x" )) = Var ( "x" )) )
        Fun ( "id2" ) |-> \ ( #symExpr(101) : #symExpr(79) ) -> \ ( Var ( "x" 
          ) : #symExpr(82) ) -> Var ( "x" )
        Fun ( "id3" ) |-> \ ( #symExpr(101) : Set ( 0 ) ) -> \ ( Var ( "x" ) :
           #symExpr(101) ) -> Var ( "x" )
        Fun ( "id4" ) |-> FunClauses ( ListItem(((#symFunClauses(96) { 
          #symExpr(95) }) Var ( "x" )) = Var ( "x" )) )
        Fun ( "id5" ) |-> FunClauses ( ListItem(((#symFunClauses(102) { 
          #symExpr(101) }) Var ( "x" )) = Var ( "x" )) )
        Fun ( "id6" ) |-> FunClauses ( ListItem((#symFunClauses(108) { 
          #symExpr(106) }) = \ ( Var ( "x" ) : #symExpr(103) ) -> Var ( "x" ))
           )
        Fun ( "id7" ) |-> (\ { Var ( "A" ) : Set ( 0 ) } -> \ ( Var ( "x" ) : 
          Var ( "A" ) ) -> Var ( "x" ) { #symExpr(112) })
        Fun ( "id8" ) |-> FunClauses ( ListItem((#symFunClauses(123) { 
          #symVariable(121) }) = (\ { Var ( "A" ) : Set ( 0 ) } -> \ ( Var ( 
          "x" ) : #symExpr(118) ) -> Var ( "x" ) { #symVariable(121) })) )
        Fun ( "one" ) |-> ((Fun ( "id'" ) Data ( "Nat" )) (Con ( "suc" ) Con (
           "zero" )))
        Fun ( "three" ) |-> ((Fun ( "id" ) { Data ( "Nat" ) }) (Con ( "suc" ) 
          Fun ( "two" )))
        Fun ( "two" ) |-> ((Fun ( "id'" ) Data ( "Nat" )) (Con ( "suc" ) Fun (
           "one" )))
        Fun ( "zero0" ) |-> ((Fun ( "id0" ) Data ( "Nat" )) Con ( "zero" ))
        Fun ( "zero1" ) |-> ((Fun ( "id0" ) Data ( "Nat" )) Con ( "zero" ))
        Fun ( "zero2" ) |-> ((Fun ( "id4" ) { Data ( "Nat" ) }) Con ( "zero" )
          )
        Fun ( "zero3" ) |-> ((Fun ( "id4" ) { Data ( "Nat" ) }) Con ( "zero" )
          )
        Fun ( "zero4" ) |-> ((Fun ( "id4" ) { Data ( "Nat" ) }) Con ( "zero" )
          )
    </fenv>
    <tenv>
        .Map
    </tenv>
    <sig>
        Fun ( "four" ) |-> Data ( "Nat" )
        Fun ( "id" ) |-> { #symExpr(67) : Set ( 0 ) } -> ( #symVariable(56) : 
          #symExpr(67) ) -> #symExpr(67)
        Fun ( "id'" ) |-> ( #symExpr(10) : Set ( 0 ) ) -> ( #symVariable(30) :
           #symExpr(10) ) -> #symExpr(10)
        Fun ( "id0" ) |-> ( #symExpr(67) : Set ( 0 ) ) -> ( #symVariable(142) 
          : #symExpr(67) ) -> #symExpr(67)
        Fun ( "id1" ) |-> ( #symExpr(82) : Set ( 0 ) ) -> ( #symVariable(75) :
           #symExpr(82) ) -> #symExpr(82)
        Fun ( "id2" ) |-> ( #symExpr(82) : Set ( 0 ) ) -> ( Var ( "x" ) : 
          #symExpr(82) ) -> #symExpr(82)
        Fun ( "id3" ) |-> ( #symExpr(101) : Set ( 0 ) ) -> ( Var ( "x" ) : 
          #symExpr(101) ) -> #symExpr(101)
        Fun ( "id4" ) |-> { #symExpr(101) : Set ( 0 ) } -> ( #symVariable(167)
           : #symExpr(101) ) -> #symExpr(101)
        Fun ( "id5" ) |-> { #symExpr(101) : Set ( 0 ) } -> ( #symVariable(99) 
          : #symExpr(101) ) -> #symExpr(101)
        Fun ( "id6" ) |-> { Var ( "A" ) : Set ( 0 ) } -> ( Var ( "x" ) : Var (
           "A" ) ) -> Var ( "A" )
        Fun ( "id7" ) |-> ( Var ( "x" ) : #symExpr(112) ) -> #symExpr(112)
        Fun ( "id8" ) |-> { Var ( "A" ) : Set ( 0 ) } -> ( Var ( "x" ) : Var (
           "A" ) ) -> Var ( "A" )
        Fun ( "one" ) |-> Data ( "Nat" )
        Fun ( "three" ) |-> Data ( "Nat" )
        Fun ( "two" ) |-> Data ( "Nat" )
        Fun ( "zero0" ) |-> Data ( "Nat" )
        Fun ( "zero1" ) |-> Data ( "Nat" )
        Fun ( "zero2" ) |-> Data ( "Nat" )
        Fun ( "zero3" ) |-> Data ( "Nat" )
        Fun ( "zero4" ) |-> Data ( "Nat" )
        Data ( "Nat" ) |-> Set ( 0 )
        Con ( "suc" ) |-> ( #symVariable(53) : Data ( "Nat" ) ) -> Data ( 
          "Nat" )
        Con ( "zero" ) |-> Data ( "Nat" )
    </sig>
    <ncat>
        Name ( "Nat" ) |-> Data ( "Nat" )
        Name ( "four" ) |-> Fun ( "four" )
        Name ( "id" ) |-> Fun ( "id" )
        Name ( "id'" ) |-> Fun ( "id'" )
        Name ( "id0" ) |-> Fun ( "id0" )
        Name ( "id1" ) |-> Fun ( "id1" )
        Name ( "id2" ) |-> Fun ( "id2" )
        Name ( "id3" ) |-> Fun ( "id3" )
        Name ( "id4" ) |-> Fun ( "id4" )
        Name ( "id5" ) |-> Fun ( "id5" )
        Name ( "id6" ) |-> Fun ( "id6" )
        Name ( "id7" ) |-> Fun ( "id7" )
        Name ( "id8" ) |-> Fun ( "id8" )
        Name ( "one" ) |-> Fun ( "one" )
        Name ( "suc" ) |-> Con ( "suc" )
        Name ( "three" ) |-> Fun ( "three" )
        Name ( "two" ) |-> Fun ( "two" )
        Name ( "zero" ) |-> Con ( "zero" )
        Name ( "zero0" ) |-> Fun ( "zero0" )
        Name ( "zero1" ) |-> Fun ( "zero1" )
        Name ( "zero2" ) |-> Fun ( "zero2" )
        Name ( "zero3" ) |-> Fun ( "zero3" )
        Name ( "zero4" ) |-> Fun ( "zero4" )
    </ncat>
</T>
