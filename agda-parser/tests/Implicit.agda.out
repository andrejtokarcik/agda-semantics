<k>
    .K
</k>
<mgu>
    subst(.KList)
</mgu>
<ctxstack>
    .List
</ctxstack>
<sig>
    Fun ( "four" ) |-> Data ( "Nat" )
    Fun ( "id" ) |-> { #symExpr(98) : Set ( 0 ) } -> ( #symVariable(88) : 
      #symExpr(98) ) -> #symExpr(98)
    Fun ( "id'" ) |-> ( #symExpr(10) : Set ( 0 ) ) -> ( #symVariable(52) : 
      #symExpr(10) ) -> #symExpr(10)
    Fun ( "id0" ) |-> ( #symExpr(98) : Set ( 0 ) ) -> ( #symVariable(191) : 
      #symExpr(98) ) -> #symExpr(98)
    Fun ( "id1" ) |-> ( #symExpr(123) : Set ( 0 ) ) -> ( #symVariable(111) : 
      #symExpr(123) ) -> #symExpr(123)
    Fun ( "id2" ) |-> ( #symExpr(123) : Set ( 0 ) ) -> ( Var ( "x" ) : 
      #symExpr(123) ) -> #symExpr(123)
    Fun ( "id3" ) |-> ( #symExpr(140) : Set ( 0 ) ) -> ( Var ( "x" ) : 
      #symExpr(140) ) -> #symExpr(140)
    Fun ( "id4" ) |-> { #symExpr(140) : Set ( 0 ) } -> ( #symVariable(222) : 
      #symExpr(140) ) -> #symExpr(140)
    Fun ( "id5" ) |-> { #symExpr(140) : Set ( 0 ) } -> ( #symVariable(138) : 
      #symExpr(140) ) -> #symExpr(140)
    Fun ( "id6" ) |-> { Var ( "A" ) : Set ( 0 ) } -> ( Var ( "x" ) : Var ( "A"
       ) ) -> Var ( "A" )
    Fun ( "id7" ) |-> ( Var ( "x" ) : #symExpr(151) ) -> #symExpr(151)
    Fun ( "id8" ) |-> { Var ( "A" ) : Set ( 0 ) } -> ( Var ( "x" ) : Var ( "A"
       ) ) -> Var ( "A" )
    Fun ( "one" ) |-> Data ( "Nat" )
    Fun ( "three" ) |-> Data ( "Nat" )
    Fun ( "two" ) |-> Data ( "Nat" )
    Fun ( "zero0" ) |-> Data ( "Nat" )
    Fun ( "zero1" ) |-> Data ( "Nat" )
    Fun ( "zero2" ) |-> Data ( "Nat" )
    Fun ( "zero3" ) |-> Data ( "Nat" )
    Fun ( "zero4" ) |-> Data ( "Nat" )
    Data ( "Nat" ) |-> Set ( 0 )
    Con ( "suc" ) |-> ( #symVariable(85) : Data ( "Nat" ) ) -> Data ( "Nat" )
    Con ( "zero" ) |-> Data ( "Nat" )
</sig>
<con>
    Data ( "Nat" ) |-> l ( ListItem(Con ( "zero" )) ListItem(Con ( "suc" )) )
</con>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<ncat>
    Name ( "Nat" ) |-> Data ( "Nat" )
    Name ( "four" ) |-> Fun ( "four" )
    Name ( "id" ) |-> Fun ( "id" )
    Name ( "id'" ) |-> Fun ( "id'" )
    Name ( "id0" ) |-> Fun ( "id0" )
    Name ( "id1" ) |-> Fun ( "id1" )
    Name ( "id2" ) |-> Fun ( "id2" )
    Name ( "id3" ) |-> Fun ( "id3" )
    Name ( "id4" ) |-> Fun ( "id4" )
    Name ( "id5" ) |-> Fun ( "id5" )
    Name ( "id6" ) |-> Fun ( "id6" )
    Name ( "id7" ) |-> Fun ( "id7" )
    Name ( "id8" ) |-> Fun ( "id8" )
    Name ( "one" ) |-> Fun ( "one" )
    Name ( "suc" ) |-> Con ( "suc" )
    Name ( "three" ) |-> Fun ( "three" )
    Name ( "two" ) |-> Fun ( "two" )
    Name ( "zero" ) |-> Con ( "zero" )
    Name ( "zero0" ) |-> Fun ( "zero0" )
    Name ( "zero1" ) |-> Fun ( "zero1" )
    Name ( "zero2" ) |-> Fun ( "zero2" )
    Name ( "zero3" ) |-> Fun ( "zero3" )
    Name ( "zero4" ) |-> Fun ( "zero4" )
</ncat>
<fun>
    Fun ( "four" ) |-> ((Fun ( "id" ) { Data ( "Nat" ) }) (Con ( "suc" ) Fun (
       "three" )))
    Fun ( "id" ) |-> FunClauses ( ListItem(((#symFunClauses(61) { #symExpr(60)
       }) Var ( "x" )) = Var ( "x" )) )
    Fun ( "id'" ) |-> \ ( #symExpr(10) : #symExpr(11) ) -> \ ( Var ( "x" ) : 
      #symExpr(14) ) -> Var ( "x" )
    Fun ( "id0" ) |-> \ ( #symExpr(98) : #symExpr(99) ) -> \ ( Var ( "x" ) : 
      #symExpr(102) ) -> Var ( "x" )
    Fun ( "id1" ) |-> \ ( #symExpr(113) : #symExpr(114) ) -> \ ( Var ( "x" ) :
       #symExpr(117) ) -> Var ( "x" )
    Fun ( "id2" ) |-> \ ( #symExpr(140) : Set ( 0 ) ) -> \ ( Var ( "x" ) : 
      #symExpr(123) ) -> Var ( "x" )
    Fun ( "id3" ) |-> \ ( #symExpr(140) : Set ( 0 ) ) -> \ ( Var ( "x" ) : 
      #symExpr(140) ) -> Var ( "x" )
    Fun ( "id4" ) |-> FunClauses ( ListItem(((#symFunClauses(135) { #symExpr(
      134) }) Var ( "x" )) = Var ( "x" )) )
    Fun ( "id5" ) |-> FunClauses ( ListItem(((#symFunClauses(141) { #symExpr(
      140) }) Var ( "x" )) = Var ( "x" )) )
    Fun ( "id6" ) |-> FunClauses ( ListItem((#symFunClauses(147) { #symExpr(
      145) }) = \ ( Var ( "x" ) : #symExpr(142) ) -> Var ( "x" )) )
    Fun ( "id7" ) |-> (\ { Var ( "A" ) : Set ( 0 ) } -> \ ( Var ( "x" ) : Var 
      ( "A" ) ) -> Var ( "x" ) { #symExpr(151) })
    Fun ( "id8" ) |-> FunClauses ( ListItem((#symFunClauses(161) { 
      #symVariable(159) }) = (\ { Var ( "A" ) : Set ( 0 ) } -> \ ( Var ( "x" )
       : #symExpr(156) ) -> Var ( "x" ) { #symVariable(159) })) )
    Fun ( "one" ) |-> ((Fun ( "id'" ) Data ( "Nat" )) (Con ( "suc" ) Con ( 
      "zero" )))
    Fun ( "three" ) |-> ((Fun ( "id" ) { Data ( "Nat" ) }) (Con ( "suc" ) Fun 
      ( "two" )))
    Fun ( "two" ) |-> ((Fun ( "id'" ) Data ( "Nat" )) (Con ( "suc" ) Fun ( 
      "one" )))
    Fun ( "zero0" ) |-> ((Fun ( "id0" ) Data ( "Nat" )) Con ( "zero" ))
    Fun ( "zero1" ) |-> ((Fun ( "id0" ) Data ( "Nat" )) Con ( "zero" ))
    Fun ( "zero2" ) |-> ((Fun ( "id4" ) { Data ( "Nat" ) }) Con ( "zero" ))
    Fun ( "zero3" ) |-> ((Fun ( "id4" ) { Data ( "Nat" ) }) Con ( "zero" ))
    Fun ( "zero4" ) |-> ((Fun ( "id4" ) { Data ( "Nat" ) }) Con ( "zero" ))
</fun>
