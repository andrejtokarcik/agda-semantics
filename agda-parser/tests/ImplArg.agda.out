<k>
    whnf ( Fun ( "t1" ) ) ~> nf ( HOLE )
</k>
<dbg>
    0
</dbg>
<mgu>
    subst(.KList)
</mgu>
<ctxstack>
    .List
</ctxstack>
<fenv-stack>
    .List
</fenv-stack>
<sig>
    Fun ( "Cons" ) |-> Set ( 1 )
    Fun ( "cons" ) |-> { #symVariable(72) : Set ( 0 ) } -> ( #symVariable(75) 
      : #symVariable(72) ) -> { #symVariable(80) : Data ( "Nat" ) } -> ( 
      #symVariable("local",, 1) : ((Data ( "Vec" ) #symVariable(72)) 
      #symVariable(80)) ) -> ((Data ( "Vec" ) #symVariable(72)) (Con ( "suc" )
       #symVariable(80)))
    Data ( "Nat" ) |-> Set ( 0 )
    Data ( "Vec" ) |-> ( Var ( "A" ) : Set ( 0 ) ) -> ( #symVariable(56) : 
      Data ( "Nat" ) ) -> Set ( 0 )
    Con ( "suc" ) |-> ( #symVariable(53) : Data ( "Nat" ) ) -> Data ( "Nat" )
    Con ( "vcons" ) |-> { Var ( "A" ) : Set ( 0 ) } -> { Var ( "n" ) : Data ( 
      "Nat" ) } -> ( #symVariable(96) : Var ( "A" ) ) -> ( #symVariable(
      "local",, 1) : ((Data ( "Vec" ) Var ( "A" )) Var ( "n" )) ) -> ((Data ( 
      "Vec" ) Var ( "A" )) (Con ( "suc" ) Var ( "n" )))
    Con ( "vnil" ) |-> { Var ( "A" ) : Set ( 0 ) } -> ((Data ( "Vec" ) Var ( 
      "A" )) Con ( "zero" ))
    Con ( "zero" ) |-> Data ( "Nat" )
</sig>
<ctx>
    .Map
</ctx>
<meta>
    .Map
</meta>
<fenv>
    .Map
</fenv>
<ncat>
    Name ( "Cons" ) |-> Fun ( "Cons" )
    Name ( "Nat" ) |-> Data ( "Nat" )
    Name ( "Vec" ) |-> Data ( "Vec" )
    Name ( "cons" ) |-> Fun ( "cons" )
    Name ( "suc" ) |-> Con ( "suc" )
    Name ( "vcons" ) |-> Con ( "vcons" )
    Name ( "vnil" ) |-> Con ( "vnil" )
    Name ( "zero" ) |-> Con ( "zero" )
</ncat>
<fun>
    Fun ( "Cons" ) |-> { Var ( "A" ) : Set ( 0 ) } -> ( Var ( "a" ) : Var ( 
      "A" ) ) -> { Var ( "n" ) : Data ( "Nat" ) } -> ( #symVariable("local",, 
      1) : ((Data ( "Vec" ) Var ( "A" )) Var ( "n" )) ) -> ((Data ( "Vec" ) 
      Var ( "A" )) (Con ( "suc" ) Var ( "n" )))
    Fun ( "cons" ) |-> 'FunClauses((((#symFunClauses(103) { #symExpr(76) }) 
      Var ( "a" )) { #symExpr(78) }) = (((Con ( "vcons" ) { #symExpr(97) }) { 
      #symExpr(91) }) Var ( "a" )))
</fun>
